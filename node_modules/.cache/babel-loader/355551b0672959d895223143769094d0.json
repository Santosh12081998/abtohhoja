{"ast":null,"code":"var _jsxFileName = \"G:\\\\react-deploy\\\\src\\\\App.js\";\n// import logo from './logo.svg';\n// import app from \"./firebase\";\n// import { getFirestore, collection, getDocs, setDoc, doc, addDoc } from 'firebase/firestore/lite';\n// import './App.css';\n// import GoogleLogin from 'react-google-login';\n// import { useEffect, useState } from 'react';\n// import Home from './component/Home';\n// // let clientId = \"1098019005957-m2sjfa61abn8dsb8tk0eplog0dbsqi5d.apps.googleusercontent.com\";\n// let clientId = \"1098019005957-m2sjfa61abn8dsb8tk0eplog0dbsqi5d.apps.googleusercontent.com\";\n// const db = getFirestore(app);\n// function App() {\n// \tconst [insertedValue, setInsertedValue] = useState('');\n// \tconst [allData, setAllData] = useState([]);\n// \tuseEffect(()=>{\n// \t\tgetData();\n// \t}, [])\n// \tconst responseGoogle = (a) =>{\n// \t\tconsole.log(\"Hello1\", a)\n// \t\t// return cityList;\n// \t}\n// \tconst AddNewRow = async () =>{\n// \t\tif(insertedValue==\"\"){\n// \t\t\talert('kidhar chale. Kuch likh lo.');\n// \t\t\treturn;\n// \t\t}\n// \t\tawait addDoc(collection(db, \"users\"), {\n// \t\t\tname: insertedValue,\n// \t\t\tstate: \"CA\",\n// \t\t\tcountry: \"USA\"\n// \t\t});\n// \t\tsetInsertedValue('');\n// \t\tgetData();\n// \t\tconsole.log(\"Added user\")\n// \t}\n// \tconst UpdateRow = async () =>{\n// \t\tawait setDoc(doc(db, \"users\", \"LA\"), {\n// \t\t\tname: \"Los Angeles\",\n// \t\t\tstate: \"CA\",\n// \t\t\tcountry: \"USA\"\n// \t\t});\n// \t\tconsole.log(\"Updating user\")\n// \t}\n// \tconst getData = async () =>{\n// \t\tconst citiesCol = collection(db, 'users');\n// \t\tconst citySnapshot = await getDocs(citiesCol);\n// \t\tconst cityList = citySnapshot.docs.map(doc => doc.data());\n// \t\tsetAllData(cityList);\n// \t\tconsole.log(\"All Data\", cityList);\n// \t}\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<header className=\"App-header\">\n// \t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n// \t\t\t\t{/* <p>\n// \t\t\t\t\tEdit <code>src/App.js</code> and save to reload.\n// \t\t\t\t</p>\n// \t\t\t\t<a\n// \t\t\t\t\tclassName=\"App-link\"\n// \t\t\t\t\thref=\"https://reactjs.org\"\n// \t\t\t\t\ttarget=\"_blank\"\n// \t\t\t\t\trel=\"noopener noreferrer\"\n// \t\t\t\t>\n// \t\t\t\t\tLearn React\n// \t\t\t\t</a> */}\n// \t\t\t\t{/* e.target.value */}\n// \t\t\t\t{allData.map((item, index)=><div key={index}>{item.name}</div>)}\n// \t\t\t\t<input type=\"text\" value={insertedValue} onChange={(text)=>{\n// \t\t\t\t\tsetInsertedValue(text.target.value);\n// \t\t\t\t\t// console.log(\"value\", text.target.value)\n// \t\t\t\t}}/>\n// \t\t\t\t<a\n// \t\t\t\t\tclassName=\"App-link\"\n// \t\t\t\t\thref=\"./component/Home\"\n// \t\t\t\t\ttarget=\"_blank\"\n// \t\t\t\t\trel=\"noopener noreferrer\"\n// \t\t\t\t>\n// \t\t\t\t\tLearn React\n// \t\t\t\t</a>\n// \t\t\t\t<button onClick={AddNewRow} title=\"Insert\" >Insert</button>\n// \t\t\t\t{/* <GoogleLogin\n// \t\t\t\t\tclientId={clientId}\n// \t\t\t\t\tbuttonText=\"Login\"\n// \t\t\t\t\tonSuccess={responseGoogle}\n// \t\t\t\t\tonFailure={responseGoogle}\n// \t\t\t\t\tcookiePolicy={'single_host_origin'}\n// \t\t\t\t/> */}\n// \t\t\t</header>\n// \t\t</div>\n// \t);\n// }\n// export default App;\nimport React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './pages';\nimport About from './pages/about';\nimport SignUp from './pages/signup';\nimport Contact from './pages/contact';\nimport Videos from './pages/videos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/videos\",\n        element: /*#__PURE__*/_jsxDEV(Videos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/sign-up\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 2\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navbar","BrowserRouter","Router","Routes","Route","Home","About","SignUp","Contact","Videos","App"],"sources":["G:/react-deploy/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import app from \"./firebase\";\n// import { getFirestore, collection, getDocs, setDoc, doc, addDoc } from 'firebase/firestore/lite';\n// import './App.css';\n// import GoogleLogin from 'react-google-login';\n// import { useEffect, useState } from 'react';\n// import Home from './component/Home';\n// // let clientId = \"1098019005957-m2sjfa61abn8dsb8tk0eplog0dbsqi5d.apps.googleusercontent.com\";\n// let clientId = \"1098019005957-m2sjfa61abn8dsb8tk0eplog0dbsqi5d.apps.googleusercontent.com\";\n// const db = getFirestore(app);\n\n// function App() {\n\n// \tconst [insertedValue, setInsertedValue] = useState('');\n// \tconst [allData, setAllData] = useState([]);\n\n// \tuseEffect(()=>{\n// \t\tgetData();\n// \t}, [])\n\n// \tconst responseGoogle = (a) =>{\n\t\t\n// \t\tconsole.log(\"Hello1\", a)\n\t\t\n// \t\t// return cityList;\n// \t}\n\n// \tconst AddNewRow = async () =>{\n// \t\tif(insertedValue==\"\"){\n// \t\t\talert('kidhar chale. Kuch likh lo.');\n// \t\t\treturn;\n// \t\t}\n// \t\tawait addDoc(collection(db, \"users\"), {\n// \t\t\tname: insertedValue,\n// \t\t\tstate: \"CA\",\n// \t\t\tcountry: \"USA\"\n// \t\t});\n// \t\tsetInsertedValue('');\n// \t\tgetData();\n// \t\tconsole.log(\"Added user\")\n// \t}\n\n// \tconst UpdateRow = async () =>{\n// \t\tawait setDoc(doc(db, \"users\", \"LA\"), {\n// \t\t\tname: \"Los Angeles\",\n// \t\t\tstate: \"CA\",\n// \t\t\tcountry: \"USA\"\n// \t\t});\n// \t\tconsole.log(\"Updating user\")\n// \t}\n\n// \tconst getData = async () =>{\n// \t\tconst citiesCol = collection(db, 'users');\n// \t\tconst citySnapshot = await getDocs(citiesCol);\n// \t\tconst cityList = citySnapshot.docs.map(doc => doc.data());\n// \t\tsetAllData(cityList);\n// \t\tconsole.log(\"All Data\", cityList);\n// \t}\n\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<header className=\"App-header\">\n// \t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n// \t\t\t\t{/* <p>\n// \t\t\t\t\tEdit <code>src/App.js</code> and save to reload.\n// \t\t\t\t</p>\n// \t\t\t\t<a\n// \t\t\t\t\tclassName=\"App-link\"\n// \t\t\t\t\thref=\"https://reactjs.org\"\n// \t\t\t\t\ttarget=\"_blank\"\n// \t\t\t\t\trel=\"noopener noreferrer\"\n// \t\t\t\t>\n// \t\t\t\t\tLearn React\n// \t\t\t\t</a> */}\n// \t\t\t\t{/* e.target.value */}\n\n// \t\t\t\t{allData.map((item, index)=><div key={index}>{item.name}</div>)}\n\n// \t\t\t\t<input type=\"text\" value={insertedValue} onChange={(text)=>{\n// \t\t\t\t\tsetInsertedValue(text.target.value);\n// \t\t\t\t\t// console.log(\"value\", text.target.value)\n// \t\t\t\t}}/>\n// \t\t\t\t<a\n// \t\t\t\t\tclassName=\"App-link\"\n// \t\t\t\t\thref=\"./component/Home\"\n// \t\t\t\t\ttarget=\"_blank\"\n// \t\t\t\t\trel=\"noopener noreferrer\"\n// \t\t\t\t>\n// \t\t\t\t\tLearn React\n// \t\t\t\t</a>\n// \t\t\t\t<button onClick={AddNewRow} title=\"Insert\" >Insert</button>\n// \t\t\t\t{/* <GoogleLogin\n// \t\t\t\t\tclientId={clientId}\n// \t\t\t\t\tbuttonText=\"Login\"\n// \t\t\t\t\tonSuccess={responseGoogle}\n// \t\t\t\t\tonFailure={responseGoogle}\n// \t\t\t\t\tcookiePolicy={'single_host_origin'}\n// \t\t\t\t/> */}\n// \t\t\t</header>\n// \t\t</div>\n// \t);\n// }\n\n// export default App;\nimport React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Routes, Route}\n\tfrom 'react-router-dom';\nimport Home from './pages';\nimport About from './pages/about';\nimport SignUp from './pages/signup';\nimport Contact from './pages/contact';\nimport Videos from './pages/videos';\n\nfunction App() {\nreturn (\n\t<Router>\n\t<Navbar />\n\t<Routes>\n\t\t<Route exact path='/' exact element={<Home />} />\n\t\t<Route path='/about' element={<About/>} />\n\t\t<Route path='/contact' element={<Contact/>} />\n\t\t<Route path='/videos' element={<Videos/>} />\n\t\t<Route path='/sign-up' element={<SignUp/>} />\n\t</Routes>\n\t</Router>\n);\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QACM,kBADN;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;AAEA,SAASC,GAAT,GAAe;EACf,oBACC,QAAC,MAAD;IAAA,wBACA,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,MAAD;MAAA,wBACC,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,GAAlB;QAAsB,KAAK,MAA3B;QAA4B,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAArC;QAAA;QAAA;QAAA;MAAA,QADD,eAEC,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFD,eAGC,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,OAAO,eAAE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAHD,eAIC,QAAC,KAAD;QAAO,IAAI,EAAC,SAAZ;QAAsB,OAAO,eAAE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MAA/B;QAAA;QAAA;QAAA;MAAA,QAJD,eAKC,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,OAAO,eAAE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QALD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAYC;;KAbQA,G;AAeT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}