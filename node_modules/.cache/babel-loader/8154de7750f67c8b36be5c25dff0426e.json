{"ast":null,"code":"import _get from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _construct from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _slicedToArray from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _inherits from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _toConsumableArray from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"G:/react-deploy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nvar l = /*#__PURE__*/function () {\n  function l(t) {\n    _classCallCheck(this, l);\n\n    this.uid = t;\n  }\n\n  _createClass(l, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n\n  }, {\n    key: \"toKey\",\n    value: function toKey() {\n      return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.uid === this.uid;\n    }\n  }]);\n\n  return l;\n}();\n/** A user with a null UID. */\n\n\nl.UNAUTHENTICATED = new l(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), l.MOCK_USER = new l(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar f = \"9.9.1\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d = new Logger(\"@firebase/firestore\");\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\nfunction w(t) {\n  d.setLogLevel(t);\n}\n\nfunction _m(t) {\n  if (d.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n\n    var n = e.map(_);\n    d.debug.apply(d, [\"Firestore (\".concat(f, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n\nfunction p(t) {\n  if (d.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n\n    var n = e.map(_);\n    d.error.apply(d, [\"Firestore (\".concat(f, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * @internal\n */\n\n\nfunction y(t) {\n  if (d.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n\n    var n = e.map(_);\n    d.warn.apply(d, [\"Firestore (\".concat(f, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction _(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction g() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var e = \"FIRESTORE (\".concat(f, \") INTERNAL ASSERTION FAILED: \") + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw p(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction v(t, e) {\n  t || g();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction b(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar E = \"ok\",\n    T = \"cancelled\",\n    I = \"unknown\",\n    A = \"invalid-argument\",\n    R = \"deadline-exceeded\",\n    P = \"not-found\",\n    V = \"already-exists\",\n    N = \"permission-denied\",\n    D = \"unauthenticated\",\n    $ = \"resource-exhausted\",\n    x = \"failed-precondition\",\n    F = \"aborted\",\n    S = \"out-of-range\",\n    q = \"unimplemented\",\n    O = \"internal\",\n    k = \"unavailable\",\n    C = \"data-loss\";\n/** An error returned by a Firestore operation. */\n\nvar L = /*#__PURE__*/function (_FirebaseError) {\n  _inherits(L, _FirebaseError);\n\n  var _super = _createSuper(L);\n\n  /** @hideconstructor */\n  function L(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    var _this;\n\n    _classCallCheck(this, L);\n\n    _this = _super.call(this, t, e), _this.code = t, _this.message = e, // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    _this.toString = function () {\n      return \"\".concat(_this.name, \": [code=\").concat(_this.code, \"]: \").concat(_this.message);\n    };\n    return _this;\n  }\n\n  return _createClass(L);\n}(FirebaseError);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar M = /*#__PURE__*/_createClass(function M() {\n  var _this2 = this;\n\n  _classCallCheck(this, M);\n\n  this.promise = new Promise(function (t, e) {\n    _this2.resolve = t, _this2.reject = e;\n  });\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar U = /*#__PURE__*/_createClass(function U(t, e) {\n  _classCallCheck(this, U);\n\n  this.user = e, this.type = \"OAuth\", this.headers = new Map(), this.headers.set(\"Authorization\", \"Bearer \".concat(t));\n});\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nvar j = /*#__PURE__*/function () {\n  function j() {\n    _classCallCheck(this, j);\n  }\n\n  _createClass(j, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(l.UNAUTHENTICATED);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return j;\n}();\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nvar B = /*#__PURE__*/function () {\n  function B(t) {\n    _classCallCheck(this, B);\n\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  _createClass(B, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(this.token);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      var _this3 = this;\n\n      this.changeListener = e, // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(_this3.token.user);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.changeListener = null;\n    }\n  }]);\n\n  return B;\n}();\n/** Credential provider for the Lite SDK. */\n\n\nvar z = /*#__PURE__*/function () {\n  function z(t) {\n    var _this4 = this;\n\n    _classCallCheck(this, z);\n\n    this.auth = null, t.onInit(function (t) {\n      _this4.auth = t;\n    });\n  }\n\n  _createClass(z, [{\n    key: \"getToken\",\n    value: function getToken() {\n      var _this5 = this;\n\n      return this.auth ? this.auth.getToken().then(function (t) {\n        return t ? (v(\"string\" == typeof t.accessToken), new U(t.accessToken, new l(_this5.auth.getUid()))) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return z;\n}();\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nvar G = /*#__PURE__*/_createClass(function G(t, e, n) {\n  _classCallCheck(this, G);\n\n  this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.headers = new Map(), this.headers.set(\"X-Goog-AuthUser\", e);\n  var r = t.auth.getAuthHeaderValueForFirstParty([]);\n  r && this.headers.set(\"Authorization\", r), n && this.headers.set(\"X-Goog-Iam-Authorization-Token\", n);\n});\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nvar W = /*#__PURE__*/function () {\n  function W(t, e, n) {\n    _classCallCheck(this, W);\n\n    this.t = t, this.i = e, this.o = n;\n  }\n\n  _createClass(W, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial uid.\n      t.enqueueRetryable(function () {\n        return e(l.FIRST_PARTY);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }]);\n\n  return W;\n}();\n\nvar K = /*#__PURE__*/_createClass(function K(t) {\n  _classCallCheck(this, K);\n\n  this.value = t, this.type = \"AppCheck\", this.headers = new Map(), t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n});\n/** AppCheck token provider for the Lite SDK. */\n\n\nvar Q = /*#__PURE__*/function () {\n  function Q(t) {\n    var _this6 = this;\n\n    _classCallCheck(this, Q);\n\n    this.u = t, this.appCheck = null, t.onInit(function (t) {\n      _this6.appCheck = t;\n    });\n  }\n\n  _createClass(Q, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return this.appCheck ? this.appCheck.getToken().then(function (t) {\n        return t ? (v(\"string\" == typeof t.token), new K(t.token)) : null;\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {}\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return Q;\n}();\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Y = /*#__PURE__*/_createClass(\n/**\n * Constructs a DatabaseInfo using the provided host, databaseId and\n * persistenceKey.\n *\n * @param databaseId - The database to use.\n * @param appId - The Firebase App Id.\n * @param persistenceKey - A unique identifier for this Firestore's local\n * storage (used in conjunction with the databaseId).\n * @param host - The Firestore backend host to connect to.\n * @param ssl - Whether to use SSL when connecting.\n * @param forceLongPolling - Whether to use the forceLongPolling option\n * when using WebChannel as the network transport.\n * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n * option when using WebChannel as the network transport.\n * @param useFetchStreams Whether to use the Fetch API instead of\n * XMLHTTPRequest\n */\nfunction Y(t, e, n, r, s, i, o, u) {\n  _classCallCheck(this, Y);\n\n  this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n});\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nvar H = /*#__PURE__*/function () {\n  function H(t, e) {\n    _classCallCheck(this, H);\n\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  _createClass(H, [{\n    key: \"isDefaultDatabase\",\n    get: function get() {\n      return \"(default)\" === this.database;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof H && t.projectId === this.projectId && t.database === this.database;\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new H(\"\", \"\");\n    }\n  }]);\n\n  return H;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nvar J = /*#__PURE__*/function () {\n  function J(t, e, n) {\n    _classCallCheck(this, J);\n\n    void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  _createClass(J, [{\n    key: \"length\",\n    get: function get() {\n      return this.len;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return 0 === J.comparator(this, t);\n    }\n  }, {\n    key: \"child\",\n    value: function child(t) {\n      var e = this.segments.slice(this.offset, this.limit());\n      return t instanceof J ? t.forEach(function (t) {\n        e.push(t);\n      }) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */\n\n  }, {\n    key: \"limit\",\n    value: function limit() {\n      return this.offset + this.length;\n    }\n  }, {\n    key: \"popFirst\",\n    value: function popFirst(t) {\n      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n  }, {\n    key: \"popLast\",\n    value: function popLast() {\n      return this.construct(this.segments, this.offset, this.length - 1);\n    }\n  }, {\n    key: \"firstSegment\",\n    value: function firstSegment() {\n      return this.segments[this.offset];\n    }\n  }, {\n    key: \"lastSegment\",\n    value: function lastSegment() {\n      return this.get(this.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.segments[this.offset + t];\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return 0 === this.length;\n    }\n  }, {\n    key: \"isPrefixOf\",\n    value: function isPrefixOf(t) {\n      if (t.length < this.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"isImmediateParentOf\",\n    value: function isImmediateParentOf(t) {\n      if (this.length + 1 !== t.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      for (var e = this.offset, n = this.limit(); e < n; e++) {\n        t(this.segments[e]);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.segments.slice(this.offset, this.limit());\n    }\n  }], [{\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      var n = Math.min(t.length, e.length);\n\n      for (var r = 0; r < n; r++) {\n        var _n2 = t.get(r),\n            s = e.get(r);\n\n        if (_n2 < s) return -1;\n        if (_n2 > s) return 1;\n      }\n\n      return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n  }]);\n\n  return J;\n}();\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nvar X = /*#__PURE__*/function (_J) {\n  _inherits(X, _J);\n\n  var _super2 = _createSuper(X);\n\n  function X() {\n    _classCallCheck(this, X);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(X, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new X(t, e, n);\n    }\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      return this.toArray().join(\"/\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      var e = [];\n\n      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        t[_key4] = arguments[_key4];\n      }\n\n      for (var _i = 0, _t2 = t; _i < _t2.length; _i++) {\n        var n = _t2[_i];\n        if (n.indexOf(\"//\") >= 0) throw new L(A, \"Invalid segment (\".concat(n, \"). Paths must not contain // in them.\")); // Strip leading and traling slashed.\n\n        e.push.apply(e, _toConsumableArray(n.split(\"/\").filter(function (t) {\n          return t.length > 0;\n        })));\n      }\n\n      return new X(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new X([]);\n    }\n  }]);\n\n  return X;\n}(J);\n\nvar Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nvar tt = /*#__PURE__*/function (_J2) {\n  _inherits(tt, _J2);\n\n  var _super3 = _createSuper(tt);\n\n  function tt() {\n    _classCallCheck(this, tt);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(tt, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new tt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      return this.toArray().map(function (t) {\n        return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t;\n      }).join(\".\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n\n  }, {\n    key: \"isKeyField\",\n    value: function isKeyField() {\n      return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */\n\n  }], [{\n    key: \"isValidIdentifier\",\n    value: function isValidIdentifier(t) {\n      return Z.test(t);\n    }\n  }, {\n    key: \"keyField\",\n    value: function keyField() {\n      return new tt([\"__name__\"]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n\n  }, {\n    key: \"fromServerFormat\",\n    value: function fromServerFormat(t) {\n      var e = [];\n      var n = \"\",\n          r = 0;\n\n      var s = function s() {\n        if (0 === n.length) throw new L(A, \"Invalid field path (\".concat(t, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"));\n        e.push(n), n = \"\";\n      };\n\n      var i = !1;\n\n      for (; r < t.length;) {\n        var _e2 = t[r];\n\n        if (\"\\\\\" === _e2) {\n          if (r + 1 === t.length) throw new L(A, \"Path has trailing escape character: \" + t);\n          var _e3 = t[r + 1];\n          if (\"\\\\\" !== _e3 && \".\" !== _e3 && \"`\" !== _e3) throw new L(A, \"Path has invalid escape sequence: \" + t);\n          n += _e3, r += 2;\n        } else \"`\" === _e2 ? (i = !i, r++) : \".\" !== _e2 || i ? (n += _e2, r++) : (s(), r++);\n      }\n\n      if (s(), i) throw new L(A, \"Unterminated ` in path: \" + t);\n      return new tt(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new tt([]);\n    }\n  }]);\n\n  return tt;\n}(J);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nvar et = /*#__PURE__*/function () {\n  function et(t) {\n    _classCallCheck(this, et);\n\n    this.path = t;\n  }\n\n  _createClass(et, [{\n    key: \"collectionGroup\",\n    get: function get() {\n      return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */\n\n  }, {\n    key: \"hasCollectionId\",\n    value: function hasCollectionId(t) {\n      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n\n  }, {\n    key: \"getCollectionGroup\",\n    value: function getCollectionGroup() {\n      return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */\n\n  }, {\n    key: \"getCollectionPath\",\n    value: function getCollectionPath() {\n      return this.path.popLast();\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.toString();\n    }\n  }], [{\n    key: \"fromPath\",\n    value: function fromPath(t) {\n      return new et(X.fromString(t));\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(t) {\n      return new et(X.fromString(t).popFirst(5));\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      return new et(X.emptyPath());\n    }\n  }, {\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      return X.comparator(t.path, e.path);\n    }\n  }, {\n    key: \"isDocumentKey\",\n    value: function isDocumentKey(t) {\n      return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n\n  }, {\n    key: \"fromSegments\",\n    value: function fromSegments(t) {\n      return new et(new X(t.slice()));\n    }\n  }]);\n\n  return et;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction nt(t, e, n) {\n  if (!n) throw new L(A, \"Function \".concat(t, \"() cannot be called with an empty \").concat(e, \".\"));\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction rt(t) {\n  if (!et.isDocumentKey(t)) throw new L(A, \"Invalid document reference. Document references must have an even number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction st(t) {\n  if (et.isDocumentKey(t)) throw new L(A, \"Invalid collection reference. Collection references must have an odd number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction it(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = \"\".concat(t.substring(0, 20), \"...\")), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      var e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? \"a custom \".concat(e, \" object\") : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new L(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      var n = it(t);\n      throw new L(A, \"Expected type '\".concat(e.name, \"', but it was: \").concat(n));\n    }\n  }\n\n  return t;\n}\n\nfunction ut(t, e) {\n  if (e <= 0) throw new L(A, \"Function \".concat(t, \"() requires a positive number, but it was: \").concat(e, \".\"));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction ct(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction at(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ht = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\nvar lt, ft;\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\n\nfunction dt(t) {\n  if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I; // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n\n  switch (t) {\n    case 200:\n      // OK\n      return E;\n\n    case 400:\n      // Bad Request\n      return x;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401:\n      // Unauthorized\n      return D;\n\n    case 403:\n      // Forbidden\n      return N;\n\n    case 404:\n      // Not Found\n      return P;\n\n    case 409:\n      // Conflict\n      return F;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416:\n      // Range Not Satisfiable\n      return S;\n\n    case 429:\n      // Too Many Requests\n      return $;\n\n    case 499:\n      // Client Closed Request\n      return T;\n\n    case 500:\n      // Internal Server Error\n      return I;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501:\n      // Unimplemented\n      return q;\n\n    case 503:\n      // Service Unavailable\n      return k;\n\n    case 504:\n      // Gateway Timeout\n      return R;\n\n    default:\n      return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? x : t >= 500 && t < 600 ? O : I;\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */\n\n\n(ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", ft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", ft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", ft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", ft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", ft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", ft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", ft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nvar wt = /*#__PURE__*/function (_ref) {\n  _inherits(wt, _ref);\n\n  var _super4 = _createSuper(wt);\n\n  /**\n   * @param databaseInfo - The connection info.\n   * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n   */\n  function wt(t, e) {\n    var _this7;\n\n    _classCallCheck(this, wt);\n\n    _this7 = _super4.call(this, t), _this7.I = e;\n    return _this7;\n  }\n\n  _createClass(wt, [{\n    key: \"A\",\n    value: function A(t, e) {\n      throw new Error(\"Not supported by FetchConnection\");\n    }\n  }, {\n    key: \"v\",\n    value: function () {\n      var _v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(t, e, n, r) {\n        var s, i;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                s = JSON.stringify(r);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.I(e, {\n                  method: \"POST\",\n                  headers: n,\n                  body: s\n                });\n\n              case 4:\n                i = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                throw new L(dt(_context.t0.status), \"Request failed with error: \" + _context.t0.statusText);\n\n              case 10:\n                if (i.ok) {\n                  _context.next = 12;\n                  break;\n                }\n\n                throw new L(dt(i.status), \"Request failed with error: \" + i.statusText);\n\n              case 12:\n                return _context.abrupt(\"return\", i.json());\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function v(_x, _x2, _x3, _x4) {\n        return _v.apply(this, arguments);\n      }\n\n      return v;\n    }()\n  }]);\n\n  return wt;\n}(\n/*#__PURE__*/\n\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nfunction () {\n  function _class(t) {\n    _classCallCheck(this, _class);\n\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    var e = t.ssl ? \"https\" : \"http\";\n    this.h = e + \"://\" + t.host, this.l = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  _createClass(_class, [{\n    key: \"m\",\n    value: function m(t, e, n, r, s) {\n      var i = this.p(t, e);\n\n      _m(\"RestConnection\", \"Sending: \", i, n);\n\n      var o = {};\n      return this.g(o, r, s), this.v(t, i, o, n).then(function (t) {\n        return _m(\"RestConnection\", \"Received: \", t), t;\n      }, function (e) {\n        throw y(\"RestConnection\", \"\".concat(t, \" failed with error: \"), e, \"url: \", i, \"request:\", n), e;\n      });\n    }\n  }, {\n    key: \"T\",\n    value: function T(t, e, n, r, s, i) {\n      // The REST API automatically aggregates all of the streamed results, so we\n      // can just use the normal invoke() method.\n      return this.m(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n\n  }, {\n    key: \"g\",\n    value: function g(t, e, n) {\n      t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the $httpOverwrite\n      // parameter supported by ESF to avoid triggering preflight requests.\n      t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e && e.headers.forEach(function (e, n) {\n        return t[n] = e;\n      }), n && n.headers.forEach(function (e, n) {\n        return t[n] = e;\n      });\n    }\n  }, {\n    key: \"p\",\n    value: function p(t, e) {\n      var n = ht[t];\n      return \"\".concat(this.h, \"/v1/\").concat(e, \":\").concat(n);\n    }\n  }]);\n\n  return _class;\n}());\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the HTTP connection for the REST API. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction mt(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  var e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n      n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (var _e4 = 0; _e4 < t; _e4++) {\n      n[_e4] = Math.floor(256 * Math.random());\n    }\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar pt = /*#__PURE__*/function () {\n  function pt() {\n    _classCallCheck(this, pt);\n  }\n\n  _createClass(pt, null, [{\n    key: \"R\",\n    value: function R() {\n      // Alphanumeric characters\n      var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n      var n = \"\";\n\n      for (; n.length < 20;) {\n        var r = mt(40);\n\n        for (var s = 0; s < r.length; ++s) {\n          // Only accept values that are [0, maxMultiple), this ensures they can\n          // be evenly mapped to indices of `chars` via a modulo operation.\n          n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n      }\n\n      return n;\n    }\n  }]);\n\n  return pt;\n}();\n\nfunction yt(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction _t(t, e, n) {\n  return t.length === e.length && t.every(function (t, r) {\n    return n(t, e[r]);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nvar gt = /*#__PURE__*/function () {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  function gt(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    _classCallCheck(this, gt);\n\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new L(A, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  _createClass(gt, [{\n    key: \"toDate\",\n    value:\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    function toDate() {\n      return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n\n  }, {\n    key: \"toMillis\",\n    value: function toMillis() {\n      return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        seconds: this.seconds,\n        nanoseconds: this.nanoseconds\n      };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      // This method returns a string of the form <seconds>.<nanoseconds> where\n      // <seconds> is translated to have a non-negative value and both <seconds>\n      // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n      // Strings with this format then have a lexiographical ordering that matches\n      // the expected ordering. The <seconds> translation is done to avoid having\n      // a leading negative sign (i.e. a leading '-' character) in its string\n      // representation, which would affect its lexiographical ordering.\n      var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n      // 'seconds' values.\n\n      return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n  }], [{\n    key: \"now\",\n    value: function now() {\n      return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n\n  }, {\n    key: \"fromDate\",\n    value: function fromDate(t) {\n      return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n\n  }, {\n    key: \"fromMillis\",\n    value: function fromMillis(t) {\n      var e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n      return new gt(e, n);\n    }\n  }]);\n\n  return gt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nvar vt = /*#__PURE__*/function () {\n  function vt(t) {\n    _classCallCheck(this, vt);\n\n    this.timestamp = t;\n  }\n\n  _createClass(vt, [{\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return this.timestamp._compareTo(t.timestamp);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n\n  }, {\n    key: \"toMicroseconds\",\n    value: function toMicroseconds() {\n      // Convert to microseconds.\n      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n  }, {\n    key: \"toTimestamp\",\n    value: function toTimestamp() {\n      return this.timestamp;\n    }\n  }], [{\n    key: \"fromTimestamp\",\n    value: function fromTimestamp(t) {\n      return new vt(t);\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      return new vt(new gt(0, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max() {\n      return new vt(new gt(253402300799, 999999999));\n    }\n  }]);\n\n  return vt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction bt(t) {\n  var e = 0;\n\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e++;\n  }\n\n  return e;\n}\n\nfunction Et(t, e) {\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n  }\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\n\n\nvar Tt = /*#__PURE__*/function () {\n  function Tt(t, e) {\n    _classCallCheck(this, Tt);\n\n    this.comparator = t, this.root = e || At.EMPTY;\n  } // Returns a copy of the map, with the specified key/value added or replaced.\n\n\n  _createClass(Tt, [{\n    key: \"insert\",\n    value: function insert(t, e) {\n      return new Tt(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, At.BLACK, null, null));\n    } // Returns a copy of the map, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t) {\n      return new Tt(this.comparator, this.root.remove(t, this.comparator).copy(null, null, At.BLACK, null, null));\n    } // Returns the value of the node with the given key, or null.\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      var e = this.root;\n\n      for (; !e.isEmpty();) {\n        var n = this.comparator(t, e.key);\n        if (0 === n) return e.value;\n        n < 0 ? e = e.left : n > 0 && (e = e.right);\n      }\n\n      return null;\n    } // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      // Number of nodes that were pruned when descending right\n      var e = 0,\n          n = this.root;\n\n      for (; !n.isEmpty();) {\n        var r = this.comparator(t, n.key);\n        if (0 === r) return e + n.left.size;\n        r < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself\n        e += n.left.size + 1, n = n.right);\n      } // Node not found\n\n\n      return -1;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.root.isEmpty();\n    } // Returns the total number of nodes in the map.\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.root.size;\n    } // Returns the minimum key in the map.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.root.minKey();\n    } // Returns the maximum key in the map.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.root.maxKey();\n    } // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.root.inorderTraversal(t);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.inorderTraversal(function (e, n) {\n        return t(e, n), !1;\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.inorderTraversal(function (e, n) {\n        return t.push(\"\".concat(e, \":\").concat(n)), !1;\n      }), \"{\".concat(t.join(\", \"), \"}\");\n    } // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.root.reverseTraversal(t);\n    } // Returns an iterator over the SortedMap.\n\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new It(this.root, null, this.comparator, !1);\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new It(this.root, t, this.comparator, !1);\n    }\n  }, {\n    key: \"getReverseIterator\",\n    value: function getReverseIterator() {\n      return new It(this.root, null, this.comparator, !0);\n    }\n  }, {\n    key: \"getReverseIteratorFrom\",\n    value: function getReverseIteratorFrom(t) {\n      return new It(this.root, t, this.comparator, !0);\n    }\n  }]);\n\n  return Tt;\n}(); // end SortedMap\n// An iterator over an LLRBNode.\n\n\nvar It = /*#__PURE__*/function () {\n  function It(t, e, n, r) {\n    _classCallCheck(this, It);\n\n    this.isReverse = r, this.nodeStack = [];\n    var s = 1;\n\n    for (; !t.isEmpty();) {\n      if (s = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse\n      e && r && (s *= -1), s < 0) // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right;else {\n        if (0 === s) {\n          // This node is exactly equal to our start key. Push it on the stack,\n          // but stop iterating;\n          this.nodeStack.push(t);\n          break;\n        } // This node is greater than our start key, add it to the stack and move\n        // to the next one\n\n\n        this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n      }\n    }\n  }\n\n  _createClass(It, [{\n    key: \"getNext\",\n    value: function getNext() {\n      var t = this.nodeStack.pop();\n      var e = {\n        key: t.key,\n        value: t.value\n      };\n      if (this.isReverse) for (t = t.left; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.right;\n      } else for (t = t.right; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.left;\n      }\n      return e;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.nodeStack.length > 0;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      if (0 === this.nodeStack.length) return null;\n      var t = this.nodeStack[this.nodeStack.length - 1];\n      return {\n        key: t.key,\n        value: t.value\n      };\n    }\n  }]);\n\n  return It;\n}(); // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\n\n\nvar At = /*#__PURE__*/function () {\n  function At(t, e, n, r, s) {\n    _classCallCheck(this, At);\n\n    this.key = t, this.value = e, this.color = null != n ? n : At.RED, this.left = null != r ? r : At.EMPTY, this.right = null != s ? s : At.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  } // Returns a copy of the current node, optionally replacing pieces of it.\n\n\n  _createClass(At, [{\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return new At(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !1;\n    } // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    } // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    } // Returns the minimum node in the tree.\n\n  }, {\n    key: \"min\",\n    value: function min() {\n      return this.left.isEmpty() ? this : this.left.min();\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.min().key;\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.right.isEmpty() ? this.key : this.right.maxKey();\n    } // Returns new tree, with the key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      var r = this;\n      var s = n(t, r.key);\n      return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), r.fixUp();\n    }\n  }, {\n    key: \"removeMin\",\n    value: function removeMin() {\n      if (this.left.isEmpty()) return At.EMPTY;\n      var t = this;\n      return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n    } // Returns new tree, with the specified item removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      var n,\n          r = this;\n      if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {\n        if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {\n          if (r.right.isEmpty()) return At.EMPTY;\n          n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n        }\n\n        r = r.copy(null, null, null, null, r.right.remove(t, e));\n      }\n      return r.fixUp();\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return this.color;\n    } // Returns new tree after performing any needed rotations.\n\n  }, {\n    key: \"fixUp\",\n    value: function fixUp() {\n      var t = this;\n      return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedLeft\",\n    value: function moveRedLeft() {\n      var t = this.colorFlip();\n      return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedRight\",\n    value: function moveRedRight() {\n      var t = this.colorFlip();\n      return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"rotateLeft\",\n    value: function rotateLeft() {\n      var t = this.copy(null, null, At.RED, null, this.right.left);\n      return this.right.copy(null, null, this.color, t, null);\n    }\n  }, {\n    key: \"rotateRight\",\n    value: function rotateRight() {\n      var t = this.copy(null, null, At.RED, this.left.right, null);\n      return this.left.copy(null, null, this.color, null, t);\n    }\n  }, {\n    key: \"colorFlip\",\n    value: function colorFlip() {\n      var t = this.left.copy(null, null, !this.left.color, null, null),\n          e = this.right.copy(null, null, !this.right.color, null, null);\n      return this.copy(null, null, !this.color, t, e);\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      var t = this.check();\n      return Math.pow(2, t) <= this.size + 1;\n    } // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (this.isRed() && this.left.isRed()) throw g();\n      if (this.right.isRed()) throw g();\n      var t = this.left.check();\n      if (t !== this.right.check()) throw g();\n      return t + (this.isRed() ? 0 : 1);\n    }\n  }]);\n\n  return At;\n}(); // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nAt.EMPTY = null, At.RED = !0, At.BLACK = !1; // end LLRBEmptyNode\n\nAt.EMPTY = new (\n/*#__PURE__*/\n// Represents an empty node (a leaf node in the Red-Black Tree).\nfunction () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n\n    this.size = 0;\n  }\n\n  _createClass(_class2, [{\n    key: \"key\",\n    get: function get() {\n      throw g();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      throw g();\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      throw g();\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      throw g();\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      throw g();\n    } // Returns a copy of the current node.\n\n  }, {\n    key: \"copy\",\n    value: function copy(t, e, n, r, s) {\n      return this;\n    } // Returns a copy of the tree, with the specified key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      return new At(t, e);\n    } // Returns a copy of the tree, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !0;\n    }\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return null;\n    }\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return null;\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return !1;\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      return !0;\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      return 0;\n    }\n  }]);\n\n  return _class2;\n}())();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\n\nvar Rt = /*#__PURE__*/function () {\n  function Rt(t) {\n    _classCallCheck(this, Rt);\n\n    this.comparator = t, this.data = new Tt(this.comparator);\n  }\n\n  _createClass(Rt, [{\n    key: \"has\",\n    value: function has(t) {\n      return null !== this.data.get(t);\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.data.minKey();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.data.maxKey();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.size;\n    }\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.data.inorderTraversal(function (e, n) {\n        return t(e), !1;\n      });\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n\n  }, {\n    key: \"forEachInRange\",\n    value: function forEachInRange(t, e) {\n      var n = this.data.getIteratorFrom(t[0]);\n\n      for (; n.hasNext();) {\n        var r = n.getNext();\n        if (this.comparator(r.key, t[1]) >= 0) return;\n        e(r.key);\n      }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */\n\n  }, {\n    key: \"forEachWhile\",\n    value: function forEachWhile(t, e) {\n      var n;\n\n      for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n        if (!t(n.getNext().key)) return;\n      }\n    }\n    /** Finds the least element greater than or equal to `elem`. */\n\n  }, {\n    key: \"firstAfterOrEqual\",\n    value: function firstAfterOrEqual(t) {\n      var e = this.data.getIteratorFrom(t);\n      return e.hasNext() ? e.getNext().key : null;\n    }\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new Pt(this.data.getIterator());\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new Pt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */\n\n  }, {\n    key: \"add\",\n    value: function add(t) {\n      return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.data.isEmpty();\n    }\n  }, {\n    key: \"unionWith\",\n    value: function unionWith(t) {\n      var e = this; // Make sure `result` always refers to the larger one of the two sets.\n\n      return e.size < t.size && (e = t, t = this), t.forEach(function (t) {\n        e = e.add(t);\n      }), e;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      if (!(t instanceof Rt)) return !1;\n      if (this.size !== t.size) return !1;\n      var e = this.data.getIterator(),\n          n = t.data.getIterator();\n\n      for (; e.hasNext();) {\n        var _t3 = e.getNext().key,\n            r = n.getNext().key;\n        if (0 !== this.comparator(_t3, r)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var t = [];\n      return this.forEach(function (e) {\n        t.push(e);\n      }), t;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.forEach(function (e) {\n        return t.push(e);\n      }), \"SortedSet(\" + t.toString() + \")\";\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(t) {\n      var e = new Rt(this.comparator);\n      return e.data = t, e;\n    }\n  }]);\n\n  return Rt;\n}();\n\nvar Pt = /*#__PURE__*/function () {\n  function Pt(t) {\n    _classCallCheck(this, Pt);\n\n    this.iter = t;\n  }\n\n  _createClass(Pt, [{\n    key: \"getNext\",\n    value: function getNext() {\n      return this.iter.getNext().key;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.iter.hasNext();\n    }\n  }]);\n\n  return Pt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nvar Vt = /*#__PURE__*/function () {\n  function Vt(t) {\n    _classCallCheck(this, Vt);\n\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(tt.comparator);\n  }\n\n  _createClass(Vt, [{\n    key: \"unionWith\",\n    value:\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */\n    function unionWith(t) {\n      var e = new Rt(tt.comparator);\n\n      var _iterator = _createForOfIteratorHelper(this.fields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _t4 = _step.value;\n          e = e.add(_t4);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(t),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var n = _step2.value;\n          e = e.add(n);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return new Vt(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */\n\n  }, {\n    key: \"covers\",\n    value: function covers(t) {\n      var _iterator3 = _createForOfIteratorHelper(this.fields),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          if (e.isPrefixOf(t)) return !0;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return !1;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return _t(this.fields, t.fields, function (t, e) {\n        return t.isEqual(e);\n      });\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new Vt([]);\n    }\n  }]);\n\n  return Vt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nvar Nt = /*#__PURE__*/function (_Symbol$iterator) {\n  function Nt(t) {\n    _classCallCheck(this, Nt);\n\n    this.binaryString = t;\n  }\n\n  _createClass(Nt, [{\n    key: _Symbol$iterator,\n    value: function value() {\n      var _this8 = this;\n\n      var t = 0;\n      return {\n        next: function next() {\n          return t < _this8.binaryString.length ? {\n            value: _this8.binaryString.charCodeAt(t++),\n            done: !1\n          } : {\n            value: void 0,\n            done: !0\n          };\n        }\n      };\n    }\n  }, {\n    key: \"toBase64\",\n    value: function toBase64() {\n      return t = this.binaryString, btoa(t);\n      /** Converts a binary string to a Base64 encoded string. */\n\n      var t;\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return function (t) {\n        var e = new Uint8Array(t.length);\n\n        for (var n = 0; n < t.length; n++) {\n          e[n] = t.charCodeAt(n);\n        }\n\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n      (this.binaryString);\n    }\n  }, {\n    key: \"approximateByteSize\",\n    value: function approximateByteSize() {\n      return 2 * this.binaryString.length;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return yt(this.binaryString, t.binaryString);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.binaryString === t.binaryString;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      var e = atob(t);\n      return new Nt(e);\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      // TODO(indexing); Remove the copy of the byte string here as this method\n      // is frequently called during indexing.\n      var e =\n      /**\n      * Helper function to convert an Uint8array to a binary string.\n      */\n      function (t) {\n        var e = \"\";\n\n        for (var n = 0; n < t.length; ++n) {\n          e += String.fromCharCode(t[n]);\n        }\n\n        return e;\n      }\n      /**\n      * Helper function to convert a binary string to an Uint8Array.\n      */\n      (t);\n\n      return new Nt(e);\n    }\n  }]);\n\n  return Nt;\n}(Symbol.iterator);\n\nNt.EMPTY_BYTE_STRING = new Nt(\"\");\nvar Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction $t(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (v(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var e = 0;\n    var n = Dt.exec(t);\n\n    if (v(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var _t5 = n[1];\n      _t5 = (_t5 + \"000000000\").substr(0, 9), e = Number(_t5);\n    } // Parse the date to get the seconds.\n\n\n    var r = new Date(t);\n    return {\n      seconds: Math.floor(r.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: xt(t.seconds),\n    nanos: xt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction xt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction Ft(t) {\n  return \"string\" == typeof t ? Nt.fromBase64String(t) : Nt.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction St(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction qt(t) {\n  var e = t.mapValue.fields.__previous_value__;\n  return St(e) ? qt(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction Ot(t) {\n  var e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new gt(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar kt = {\n  fields: {\n    __type__: {\n      stringValue: \"__max__\"\n    }\n  }\n};\n/** Extracts the backend's type order for the provided value. */\n\nfunction Ct(t) {\n  return \"nullValue\" in t ? 0\n  /* NullValue */\n  : \"booleanValue\" in t ? 1\n  /* BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* StringValue */\n  : \"bytesValue\" in t ? 6\n  /* BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* ArrayValue */\n  : \"mapValue\" in t ? St(t) ? 4\n  /* ServerTimestampValue */\n  :\n  /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n  function (t) {\n    return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n  * ability to add and remove fields (via the ObjectValueBuilder).\n  */\n  (t) ? 9007199254740991\n  /* MaxValue */\n  : 10\n  /* ObjectValue */\n  : g();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction Lt(t, e) {\n  if (t === e) return !0;\n  var n = Ct(t);\n  if (n !== Ct(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n    case 9007199254740991\n    /* MaxValue */\n    :\n      return !0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return Ot(t).isEqual(Ot(e));\n\n    case 3\n    /* TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        var n = $t(t.timestampValue),\n            r = $t(e.timestampValue);\n        return n.seconds === r.seconds && n.nanos === r.nanos;\n      }(t, e);\n\n    case 5\n    /* StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        return xt(t.geoPointValue.latitude) === xt(e.geoPointValue.latitude) && xt(t.geoPointValue.longitude) === xt(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return xt(t.integerValue) === xt(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          var _n3 = xt(t.doubleValue),\n              r = xt(e.doubleValue);\n\n          return _n3 === r ? at(_n3) === at(r) : isNaN(_n3) && isNaN(r);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* ArrayValue */\n    :\n      return _t(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        var n = t.mapValue.fields || {},\n            r = e.mapValue.fields || {};\n        if (bt(n) !== bt(r)) return !1;\n\n        for (var _t6 in n) {\n          if (n.hasOwnProperty(_t6) && (void 0 === r[_t6] || !Lt(n[_t6], r[_t6]))) return !1;\n        }\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return g();\n  }\n}\n\nfunction Mt(t, e) {\n  return void 0 !== (t.values || []).find(function (t) {\n    return Lt(t, e);\n  });\n}\n\nfunction Ut(t, e) {\n  if (t === e) return 0;\n  var n = Ct(t),\n      r = Ct(e);\n  if (n !== r) return yt(n, r);\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n    case 9007199254740991\n    /* MaxValue */\n    :\n      return 0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return yt(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        var n = xt(t.integerValue || t.doubleValue),\n            r = xt(e.integerValue || e.doubleValue);\n        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TimestampValue */\n    :\n      return jt(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return jt(Ot(t), Ot(e));\n\n    case 5\n    /* StringValue */\n    :\n      return yt(t.stringValue, e.stringValue);\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        var n = Ft(t),\n            r = Ft(e);\n        return n.compareTo(r);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* RefValue */\n    :\n      return function (t, e) {\n        var n = t.split(\"/\"),\n            r = e.split(\"/\");\n\n        for (var _t7 = 0; _t7 < n.length && _t7 < r.length; _t7++) {\n          var _e5 = yt(n[_t7], r[_t7]);\n\n          if (0 !== _e5) return _e5;\n        }\n\n        return yt(n.length, r.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        var n = yt(xt(t.latitude), xt(e.latitude));\n        if (0 !== n) return n;\n        return yt(xt(t.longitude), xt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* ArrayValue */\n    :\n      return function (t, e) {\n        var n = t.values || [],\n            r = e.values || [];\n\n        for (var _t8 = 0; _t8 < n.length && _t8 < r.length; ++_t8) {\n          var _e6 = Ut(n[_t8], r[_t8]);\n\n          if (_e6) return _e6;\n        }\n\n        return yt(n.length, r.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        if (t === kt && e === kt) return 0;\n        if (t === kt) return 1;\n        if (e === kt) return -1;\n        var n = t.fields || {},\n            r = Object.keys(n),\n            s = e.fields || {},\n            i = Object.keys(s); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        r.sort(), i.sort();\n\n        for (var _t9 = 0; _t9 < r.length && _t9 < i.length; ++_t9) {\n          var _e7 = yt(r[_t9], i[_t9]);\n\n          if (0 !== _e7) return _e7;\n          var o = Ut(n[r[_t9]], s[i[_t9]]);\n          if (0 !== o) return o;\n        }\n\n        return yt(r.length, i.length);\n      }\n      /** Returns a reference value for the provided database and key. */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw g();\n  }\n}\n\nfunction jt(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n  var n = $t(t),\n      r = $t(e),\n      s = yt(n.seconds, r.seconds);\n  return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n  return {\n    referenceValue: \"projects/\".concat(t.projectId, \"/databases/\").concat(t.database, \"/documents/\").concat(e.path.canonicalString())\n  };\n}\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction zt(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Gt(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction Wt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction Kt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Qt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    var e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return Et(t.mapValue.fields, function (t, n) {\n      return e.mapValue.fields[t] = Qt(n);\n    }), e;\n  }\n\n  if (t.arrayValue) {\n    var _e8 = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (var n = 0; n < (t.arrayValue.values || []).length; ++n) {\n      _e8.arrayValue.values[n] = Qt(t.arrayValue.values[n]);\n    }\n\n    return _e8;\n  }\n\n  return Object.assign({}, t);\n}\n\nvar Yt = /*#__PURE__*/function () {\n  function Yt(t) {\n    _classCallCheck(this, Yt);\n\n    this.value = t;\n  }\n\n  _createClass(Yt, [{\n    key: \"field\",\n    value:\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    function field(t) {\n      if (t.isEmpty()) return this.value;\n      {\n        var e = this.value;\n\n        for (var n = 0; n < t.length - 1; ++n) {\n          if (e = (e.mapValue.fields || {})[t.get(n)], !Kt(e)) return null;\n        }\n\n        return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n      }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.getFieldsMap(t.popLast())[t.lastSegment()] = Qt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n\n  }, {\n    key: \"setAll\",\n    value: function setAll(t) {\n      var _this9 = this;\n\n      var e = tt.emptyPath(),\n          n = {},\n          r = [];\n      t.forEach(function (t, s) {\n        if (!e.isImmediateParentOf(s)) {\n          // Insert the accumulated changes at this parent location\n          var _t10 = _this9.getFieldsMap(e);\n\n          _this9.applyChanges(_t10, n, r), n = {}, r = [], e = s.popLast();\n        }\n\n        t ? n[s.lastSegment()] = Qt(t) : r.push(s.lastSegment());\n      });\n      var s = this.getFieldsMap(e);\n      this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.field(t.popLast());\n      Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Lt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n\n  }, {\n    key: \"getFieldsMap\",\n    value: function getFieldsMap(t) {\n      var e = this.value;\n      e.mapValue.fields || (e.mapValue = {\n        fields: {}\n      });\n\n      for (var n = 0; n < t.length; ++n) {\n        var r = e.mapValue.fields[t.get(n)];\n        Kt(r) && r.mapValue.fields || (r = {\n          mapValue: {\n            fields: {}\n          }\n        }, e.mapValue.fields[t.get(n)] = r), e = r;\n      }\n\n      return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, e, n) {\n      Et(e, function (e, n) {\n        return t[e] = n;\n      });\n\n      var _iterator4 = _createForOfIteratorHelper(n),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _e9 = _step4.value;\n          delete t[_e9];\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Yt(Qt(this.value));\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new Yt({\n        mapValue: {}\n      });\n    }\n  }]);\n\n  return Yt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nvar Ht = /*#__PURE__*/function () {\n  function Ht(t, e, n, r, s, i) {\n    _classCallCheck(this, Ht);\n\n    this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, this.documentState = i;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  _createClass(Ht, [{\n    key: \"convertToFoundDocument\",\n    value:\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    function convertToFoundDocument(t, e) {\n      return this.version = t, this.documentType = 1\n      /* FOUND_DOCUMENT */\n      , this.data = e, this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n\n  }, {\n    key: \"convertToNoDocument\",\n    value: function convertToNoDocument(t) {\n      return this.version = t, this.documentType = 2\n      /* NO_DOCUMENT */\n      , this.data = Yt.empty(), this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"convertToUnknownDocument\",\n    value: function convertToUnknownDocument(t) {\n      return this.version = t, this.documentType = 3\n      /* UNKNOWN_DOCUMENT */\n      , this.data = Yt.empty(), this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasCommittedMutations\",\n    value: function setHasCommittedMutations() {\n      return this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasLocalMutations\",\n    value: function setHasLocalMutations() {\n      return this.documentState = 1\n      /* HAS_LOCAL_MUTATIONS */\n      , this.version = vt.min(), this;\n    }\n  }, {\n    key: \"setReadTime\",\n    value: function setReadTime(t) {\n      return this.readTime = t, this;\n    }\n  }, {\n    key: \"hasLocalMutations\",\n    get: function get() {\n      return 1\n      /* HAS_LOCAL_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasCommittedMutations\",\n    get: function get() {\n      return 2\n      /* HAS_COMMITTED_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      return 0\n      /* INVALID */\n      !== this.documentType;\n    }\n  }, {\n    key: \"isFoundDocument\",\n    value: function isFoundDocument() {\n      return 1\n      /* FOUND_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isNoDocument\",\n    value: function isNoDocument() {\n      return 2\n      /* NO_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isUnknownDocument\",\n    value: function isUnknownDocument() {\n      return 3\n      /* UNKNOWN_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Ht && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n  }, {\n    key: \"mutableCopy\",\n    value: function mutableCopy() {\n      return new Ht(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Document(\".concat(this.key, \", \").concat(this.version, \", \").concat(JSON.stringify(this.data.value), \", {documentType: \").concat(this.documentType, \"}), {documentState: \").concat(this.documentState, \"})\");\n    }\n  }], [{\n    key: \"newInvalidDocument\",\n    value: function newInvalidDocument(t) {\n      return new Ht(t, 0\n      /* INVALID */\n      , vt.min(), vt.min(), Yt.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n\n  }, {\n    key: \"newFoundDocument\",\n    value: function newFoundDocument(t, e, n) {\n      return new Ht(t, 1\n      /* FOUND_DOCUMENT */\n      , e, vt.min(), n, 0\n      /* SYNCED */\n      );\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n\n  }, {\n    key: \"newNoDocument\",\n    value: function newNoDocument(t, e) {\n      return new Ht(t, 2\n      /* NO_DOCUMENT */\n      , e, vt.min(), Yt.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"newUnknownDocument\",\n    value: function newUnknownDocument(t, e) {\n      return new Ht(t, 3\n      /* UNKNOWN_DOCUMENT */\n      , e, vt.min(), Yt.empty(), 2\n      /* HAS_COMMITTED_MUTATIONS */\n      );\n    }\n  }]);\n\n  return Ht;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nvar Jt = /*#__PURE__*/_createClass(function Jt(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n  _classCallCheck(this, Jt);\n\n  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, this.startAt = i, this.endAt = o, this.P = null;\n});\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction Xt(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new Jt(t, e, n, r, s, i, o);\n}\n\nvar Zt = /*#__PURE__*/function (_ref2) {\n  _inherits(Zt, _ref2);\n\n  var _super5 = _createSuper(Zt);\n\n  function Zt(t, e, n) {\n    var _this10;\n\n    _classCallCheck(this, Zt);\n\n    _this10 = _super5.call(this), _this10.field = t, _this10.op = e, _this10.value = n;\n    return _this10;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Zt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n      return \"!=\"\n      /* NOT_EQUAL */\n      === this.op ? null !== e && this.N(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.N(Ut(e, this.value)); // Only compare types with matching backend order (such as double and int).\n    }\n  }, {\n    key: \"N\",\n    value: function N(t) {\n      switch (this.op) {\n        case \"<\"\n        /* LESS_THAN */\n        :\n          return t < 0;\n\n        case \"<=\"\n        /* LESS_THAN_OR_EQUAL */\n        :\n          return t <= 0;\n\n        case \"==\"\n        /* EQUAL */\n        :\n          return 0 === t;\n\n        case \"!=\"\n        /* NOT_EQUAL */\n        :\n          return 0 !== t;\n\n        case \">\"\n        /* GREATER_THAN */\n        :\n          return t > 0;\n\n        case \">=\"\n        /* GREATER_THAN_OR_EQUAL */\n        :\n          return t >= 0;\n\n        default:\n          return g();\n      }\n    }\n  }, {\n    key: \"D\",\n    value: function D() {\n      return [\"<\"\n      /* LESS_THAN */\n      , \"<=\"\n      /* LESS_THAN_OR_EQUAL */\n      , \">\"\n      /* GREATER_THAN */\n      , \">=\"\n      /* GREATER_THAN_OR_EQUAL */\n      , \"!=\"\n      /* NOT_EQUAL */\n      , \"not-in\"\n      /* NOT_IN */\n      ].indexOf(this.op) >= 0;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e, n) {\n      return t.isKeyField() ? \"in\"\n      /* IN */\n      === e || \"not-in\"\n      /* NOT_IN */\n      === e ? this.V(t, e, n) : new te(t, e, n) : \"array-contains\"\n      /* ARRAY_CONTAINS */\n      === e ? new se(t, n) : \"in\"\n      /* IN */\n      === e ? new ie(t, n) : \"not-in\"\n      /* NOT_IN */\n      === e ? new oe(t, n) : \"array-contains-any\"\n      /* ARRAY_CONTAINS_ANY */\n      === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n  }, {\n    key: \"V\",\n    value: function V(t, e, n) {\n      return \"in\"\n      /* IN */\n      === e ? new ee(t, n) : new ne(t, n);\n    }\n  }]);\n\n  return Zt;\n}( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n\n  return _createClass(_class3);\n}());\n/** Filter that matches on key fields (i.e. '__name__'). */\n\n\nvar te = /*#__PURE__*/function (_Zt) {\n  _inherits(te, _Zt);\n\n  var _super6 = _createSuper(te);\n\n  function te(t, e, n) {\n    var _this11;\n\n    _classCallCheck(this, te);\n\n    _this11 = _super6.call(this, t, e, n), _this11.key = et.fromName(n.referenceValue);\n    return _this11;\n  }\n\n  _createClass(te, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = et.comparator(t.key, this.key);\n      return this.N(e);\n    }\n  }]);\n\n  return te;\n}(Zt);\n/** Filter that matches on key fields within an array. */\n\n\nvar ee = /*#__PURE__*/function (_Zt2) {\n  _inherits(ee, _Zt2);\n\n  var _super7 = _createSuper(ee);\n\n  function ee(t, e) {\n    var _this12;\n\n    _classCallCheck(this, ee);\n\n    _this12 = _super7.call(this, t, \"in\"\n    /* IN */\n    , e), _this12.keys = re(\"in\"\n    /* IN */\n    , e);\n    return _this12;\n  }\n\n  _createClass(ee, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return ee;\n}(Zt);\n/** Filter that matches on key fields not present within an array. */\n\n\nvar ne = /*#__PURE__*/function (_Zt3) {\n  _inherits(ne, _Zt3);\n\n  var _super8 = _createSuper(ne);\n\n  function ne(t, e) {\n    var _this13;\n\n    _classCallCheck(this, ne);\n\n    _this13 = _super8.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , e), _this13.keys = re(\"not-in\"\n    /* NOT_IN */\n    , e);\n    return _this13;\n  }\n\n  _createClass(ne, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return !this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return ne;\n}(Zt);\n\nfunction re(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {\n    return et.fromName(t.referenceValue);\n  });\n}\n/** A Filter that implements the array-contains operator. */\n\n\nvar se = /*#__PURE__*/function (_Zt4) {\n  _inherits(se, _Zt4);\n\n  var _super9 = _createSuper(se);\n\n  function se(t, e) {\n    _classCallCheck(this, se);\n\n    return _super9.call(this, t, \"array-contains\"\n    /* ARRAY_CONTAINS */\n    , e);\n  }\n\n  _createClass(se, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return zt(e) && Mt(e.arrayValue, this.value);\n    }\n  }]);\n\n  return se;\n}(Zt);\n/** A Filter that implements the IN operator. */\n\n\nvar ie = /*#__PURE__*/function (_Zt5) {\n  _inherits(ie, _Zt5);\n\n  var _super10 = _createSuper(ie);\n\n  function ie(t, e) {\n    _classCallCheck(this, ie);\n\n    return _super10.call(this, t, \"in\"\n    /* IN */\n    , e);\n  }\n\n  _createClass(ie, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return null !== e && Mt(this.value.arrayValue, e);\n    }\n  }]);\n\n  return ie;\n}(Zt);\n/** A Filter that implements the not-in operator. */\n\n\nvar oe = /*#__PURE__*/function (_Zt6) {\n  _inherits(oe, _Zt6);\n\n  var _super11 = _createSuper(oe);\n\n  function oe(t, e) {\n    _classCallCheck(this, oe);\n\n    return _super11.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , e);\n  }\n\n  _createClass(oe, [{\n    key: \"matches\",\n    value: function matches(t) {\n      if (Mt(this.value.arrayValue, {\n        nullValue: \"NULL_VALUE\"\n      })) return !1;\n      var e = t.data.field(this.field);\n      return null !== e && !Mt(this.value.arrayValue, e);\n    }\n  }]);\n\n  return oe;\n}(Zt);\n/** A Filter that implements the array-contains-any operator. */\n\n\nvar ue = /*#__PURE__*/function (_Zt7) {\n  _inherits(ue, _Zt7);\n\n  var _super12 = _createSuper(ue);\n\n  function ue(t, e) {\n    _classCallCheck(this, ue);\n\n    return _super12.call(this, t, \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  _createClass(ue, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var _this14 = this;\n\n      var e = t.data.field(this.field);\n      return !(!zt(e) || !e.arrayValue.values) && e.arrayValue.values.some(function (t) {\n        return Mt(_this14.value.arrayValue, t);\n      });\n    }\n  }]);\n\n  return ue;\n}(Zt);\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\n\n\nvar ce = /*#__PURE__*/_createClass(function ce(t, e) {\n  _classCallCheck(this, ce);\n\n  this.position = t, this.inclusive = e;\n});\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nvar ae = /*#__PURE__*/_createClass(function ae(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n\n  _classCallCheck(this, ae);\n\n  this.field = t, this.dir = e;\n});\n\nfunction he(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction le(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n\n  for (var n = 0; n < t.position.length; n++) {\n    if (!Lt(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nvar fe = /*#__PURE__*/_createClass(\n/**\n * Initializes a Query with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n */\nfunction fe(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var u = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n\n  _classCallCheck(this, fe);\n\n  this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.$ = null, // The corresponding `Target` of this `Query` instance.\n  this.F = null, this.startAt, this.endAt;\n});\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction de(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction we(t) {\n  var _iterator5 = _createForOfIteratorHelper(t.filters),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var e = _step5.value;\n      if (e.D()) return e.field;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return null;\n}\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction me(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction pe(t) {\n  var e = b(t);\n\n  if (null === e.$) {\n    e.$ = [];\n\n    var _t11 = we(e),\n        n = de(e);\n\n    if (null !== _t11 && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      _t11.isKeyField() || e.$.push(new ae(_t11)), e.$.push(new ae(tt.keyField(), \"asc\"\n      /* ASCENDING */\n      ));else {\n      var _t12 = !1;\n\n      var _iterator6 = _createForOfIteratorHelper(e.explicitOrderBy),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _n4 = _step6.value;\n          e.$.push(_n4), _n4.field.isKeyField() && (_t12 = !0);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      if (!_t12) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        var _t13 = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* ASCENDING */\n        ;\n\n        e.$.push(new ae(tt.keyField(), _t13));\n      }\n    }\n  }\n\n  return e.$;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction ye(t) {\n  var e = b(t);\n  if (!e.F) if (\"F\"\n  /* First */\n  === e.limitType) e.F = Xt(e.path, e.collectionGroup, pe(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    var _t14 = [];\n\n    var _iterator7 = _createForOfIteratorHelper(pe(e)),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _n5 = _step7.value;\n\n        var _e10 = \"desc\"\n        /* DESCENDING */\n        === _n5.dir ? \"asc\"\n        /* ASCENDING */\n        : \"desc\"\n        /* DESCENDING */\n        ;\n\n        _t14.push(new ae(_n5.field, _e10));\n      } // We need to swap the cursors to match the now-flipped query ordering.\n\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    var n = e.endAt ? new ce(e.endAt.position, e.endAt.inclusive) : null,\n        r = e.startAt ? new ce(e.startAt.position, e.startAt.inclusive) : null; // Now return as a LimitType.First query.\n\n    e.F = Xt(e.path, e.collectionGroup, _t14, e.filters, e.limit, n, r);\n  }\n  return e.F;\n}\n\nfunction _e(t, e) {\n  return function (t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n\n    for (var _n6 = 0; _n6 < t.orderBy.length; _n6++) {\n      if (!he(t.orderBy[_n6], e.orderBy[_n6])) return !1;\n    }\n\n    if (t.filters.length !== e.filters.length) return !1;\n\n    for (var s = 0; s < t.filters.length; s++) {\n      if (n = t.filters[s], r = e.filters[s], n.op !== r.op || !n.field.isEqual(r.field) || !Lt(n.value, r.value)) return !1;\n    }\n\n    var n, r;\n    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!le(t.startAt, e.startAt) && le(t.endAt, e.endAt);\n  }(ye(t), ye(e)) && t.limitType === e.limitType;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction ge(t, e) {\n  return function (t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n  }(e) ?\n  /**\n  * Returns an IntegerValue for `value`.\n  */\n  function (t) {\n    return {\n      integerValue: \"\" + t\n    };\n  }(e) : function (t, e) {\n    if (t.S) {\n      if (isNaN(e)) return {\n        doubleValue: \"NaN\"\n      };\n      if (e === 1 / 0) return {\n        doubleValue: \"Infinity\"\n      };\n      if (e === -1 / 0) return {\n        doubleValue: \"-Infinity\"\n      };\n    }\n\n    return {\n      doubleValue: at(e) ? \"-0\" : e\n    };\n  }(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nvar ve = /*#__PURE__*/_createClass(function ve() {\n  _classCallCheck(this, ve);\n\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  this._ = void 0;\n});\n/** Transforms a value into a server-generated timestamp. */\n\n\nvar be = /*#__PURE__*/function (_ve) {\n  _inherits(be, _ve);\n\n  var _super13 = _createSuper(be);\n\n  function be() {\n    _classCallCheck(this, be);\n\n    return _super13.apply(this, arguments);\n  }\n\n  return _createClass(be);\n}(ve);\n/** Transforms an array value via a union operation. */\n\n\nvar Ee = /*#__PURE__*/function (_ve2) {\n  _inherits(Ee, _ve2);\n\n  var _super14 = _createSuper(Ee);\n\n  function Ee(t) {\n    var _this15;\n\n    _classCallCheck(this, Ee);\n\n    _this15 = _super14.call(this), _this15.elements = t;\n    return _this15;\n  }\n\n  return _createClass(Ee);\n}(ve);\n/** Transforms an array value via a remove operation. */\n\n\nvar Te = /*#__PURE__*/function (_ve3) {\n  _inherits(Te, _ve3);\n\n  var _super15 = _createSuper(Te);\n\n  function Te(t) {\n    var _this16;\n\n    _classCallCheck(this, Te);\n\n    _this16 = _super15.call(this), _this16.elements = t;\n    return _this16;\n  }\n\n  return _createClass(Te);\n}(ve);\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nvar Ie = /*#__PURE__*/function (_ve4) {\n  _inherits(Ie, _ve4);\n\n  var _super16 = _createSuper(Ie);\n\n  function Ie(t, e) {\n    var _this17;\n\n    _classCallCheck(this, Ie);\n\n    _this17 = _super16.call(this), _this17.q = t, _this17.O = e;\n    return _this17;\n  }\n\n  return _createClass(Ie);\n}(ve);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nvar Ae = /*#__PURE__*/_createClass(function Ae(t, e) {\n  _classCallCheck(this, Ae);\n\n  this.field = t, this.transform = e;\n});\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nvar Re = /*#__PURE__*/function () {\n  function Re(t, e) {\n    _classCallCheck(this, Re);\n\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  _createClass(Re, [{\n    key: \"isNone\",\n    get:\n    /** Returns whether this Precondition is empty. */\n    function get() {\n      return void 0 === this.updateTime && void 0 === this.exists;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new Re();\n    }\n    /** Creates a new Precondition with an exists flag. */\n\n  }, {\n    key: \"exists\",\n    value: function exists(t) {\n      return new Re(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n\n  }, {\n    key: \"updateTime\",\n    value: function updateTime(t) {\n      return new Re(t);\n    }\n  }]);\n\n  return Re;\n}();\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nvar Pe = /*#__PURE__*/_createClass(function Pe() {\n  _classCallCheck(this, Pe);\n});\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nvar Ve = /*#__PURE__*/function (_Pe) {\n  _inherits(Ve, _Pe);\n\n  var _super17 = _createSuper(Ve);\n\n  function Ve(t, e, n) {\n    var _this18;\n\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, Ve);\n\n    _this18 = _super17.call(this), _this18.key = t, _this18.value = e, _this18.precondition = n, _this18.fieldTransforms = r, _this18.type = 0\n    /* Set */\n    ;\n    return _this18;\n  }\n\n  _createClass(Ve, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return Ve;\n}(Pe);\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\n\n\nvar Ne = /*#__PURE__*/function (_Pe2) {\n  _inherits(Ne, _Pe2);\n\n  var _super18 = _createSuper(Ne);\n\n  function Ne(t, e, n, r) {\n    var _this19;\n\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    _classCallCheck(this, Ne);\n\n    _this19 = _super18.call(this), _this19.key = t, _this19.data = e, _this19.fieldMask = n, _this19.precondition = r, _this19.fieldTransforms = s, _this19.type = 1\n    /* Patch */\n    ;\n    return _this19;\n  }\n\n  _createClass(Ne, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return this.fieldMask;\n    }\n  }]);\n\n  return Ne;\n}(Pe);\n/** A mutation that deletes the document at the given key. */\n\n\nvar De = /*#__PURE__*/function (_Pe3) {\n  _inherits(De, _Pe3);\n\n  var _super19 = _createSuper(De);\n\n  function De(t, e) {\n    var _this20;\n\n    _classCallCheck(this, De);\n\n    _this20 = _super19.call(this), _this20.key = t, _this20.precondition = e, _this20.type = 2\n    /* Delete */\n    , _this20.fieldTransforms = [];\n    return _this20;\n  }\n\n  _createClass(De, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return De;\n}(Pe);\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\n\n\nvar $e = /*#__PURE__*/function (_Pe4) {\n  _inherits($e, _Pe4);\n\n  var _super20 = _createSuper($e);\n\n  function $e(t, e) {\n    var _this21;\n\n    _classCallCheck(this, $e);\n\n    _this21 = _super20.call(this), _this21.key = t, _this21.precondition = e, _this21.type = 3\n    /* Verify */\n    , _this21.fieldTransforms = [];\n    return _this21;\n  }\n\n  _createClass($e, [{\n    key: \"getFieldMask\",\n    value: function getFieldMask() {\n      return null;\n    }\n  }]);\n\n  return $e;\n}(Pe);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar xe = function () {\n  var t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n}(),\n    Fe = function () {\n  var t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n}();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nvar Se = /*#__PURE__*/_createClass(function Se(t, e) {\n  _classCallCheck(this, Se);\n\n  this.databaseId = t, this.S = e;\n});\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction qe(t, e) {\n  if (t.S) {\n    return \"\".concat(new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\"), \".\").concat((\"000000000\" + e.nanoseconds).slice(-9), \"Z\");\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction Oe(t, e) {\n  return t.S ? e.toBase64() : e.toUint8Array();\n}\n\nfunction ke(t, e) {\n  return qe(t, e.toTimestamp());\n}\n\nfunction Ce(t) {\n  return v(!!t), vt.fromTimestamp(function (t) {\n    var e = $t(t);\n    return new gt(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction Le(t, e) {\n  return function (t) {\n    return new X([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Me(t, e) {\n  return Le(t.databaseId, e.path);\n}\n\nfunction Ue(t, e) {\n  var n = function (t) {\n    var e = X.fromString(t);\n    return v(Xe(e)), e;\n  }(e);\n\n  if (n.get(1) !== t.databaseId.projectId) throw new L(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new L(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n  var r;\n  /** Creates a Document proto from key and fields (but no create/update time) */\n}\n\nfunction je(t, e) {\n  return Le(t.databaseId, e);\n}\n\nfunction Be(t) {\n  return new X([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction ze(t, e, n) {\n  return {\n    name: Me(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction Ge(t, e) {\n  return \"found\" in e ? function (t, e) {\n    v(!!e.found), e.found.name, e.found.updateTime;\n    var n = Ue(t, e.found.name),\n        r = Ce(e.found.updateTime),\n        s = new Yt({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n    return Ht.newFoundDocument(n, r, s);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    v(!!e.missing), v(!!e.readTime);\n    var n = Ue(t, e.missing),\n        r = Ce(e.readTime);\n    return Ht.newNoDocument(n, r);\n  }(t, e) : g();\n}\n\nfunction We(t, e) {\n  var n;\n  if (e instanceof Ve) n = {\n    update: ze(t, e.key, e.value)\n  };else if (e instanceof De) n = {\n    delete: Me(t, e.key)\n  };else if (e instanceof Ne) n = {\n    update: ze(t, e.key, e.data),\n    updateMask: Je(e.fieldMask)\n  };else {\n    if (!(e instanceof $e)) return g();\n    n = {\n      verify: Me(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(function (t) {\n    return function (t, e) {\n      var n = e.transform;\n      if (n instanceof be) return {\n        fieldPath: e.field.canonicalString(),\n        setToServerValue: \"REQUEST_TIME\"\n      };\n      if (n instanceof Ee) return {\n        fieldPath: e.field.canonicalString(),\n        appendMissingElements: {\n          values: n.elements\n        }\n      };\n      if (n instanceof Te) return {\n        fieldPath: e.field.canonicalString(),\n        removeAllFromArray: {\n          values: n.elements\n        }\n      };\n      if (n instanceof Ie) return {\n        fieldPath: e.field.canonicalString(),\n        increment: n.O\n      };\n      throw g();\n    }(0, t);\n  })), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: ke(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : g();\n  }(t, e.precondition)), n;\n}\n\nfunction Ke(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  var n = {\n    structuredQuery: {}\n  },\n      r = e.path;\n  null !== e.collectionGroup ? (n.parent = je(t, r), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = je(t, r.popLast()), n.structuredQuery.from = [{\n    collectionId: r.lastSegment()\n  }]);\n\n  var s = function (t) {\n    if (0 === t.length) return;\n    var e = t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          if (\"==\"\n          /* EQUAL */\n          === t.op) {\n            if (Wt(t.value)) return {\n              unaryFilter: {\n                field: He(t.field),\n                op: \"IS_NAN\"\n              }\n            };\n            if (Gt(t.value)) return {\n              unaryFilter: {\n                field: He(t.field),\n                op: \"IS_NULL\"\n              }\n            };\n          } else if (\"!=\"\n          /* NOT_EQUAL */\n          === t.op) {\n            if (Wt(t.value)) return {\n              unaryFilter: {\n                field: He(t.field),\n                op: \"IS_NOT_NAN\"\n              }\n            };\n            if (Gt(t.value)) return {\n              unaryFilter: {\n                field: He(t.field),\n                op: \"IS_NOT_NULL\"\n              }\n            };\n          }\n\n          return {\n            fieldFilter: {\n              field: He(t.field),\n              op: Ye(t.op),\n              value: t.value\n            }\n          };\n        }(t)\n      );\n    });\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: \"AND\",\n        filters: e\n      }\n    };\n  }(e.filters);\n\n  s && (n.structuredQuery.where = s);\n\n  var i = function (t) {\n    if (0 === t.length) return;\n    return t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          return {\n            field: He(t.field),\n            direction: Qe(t.dir)\n          };\n        }(t)\n      );\n    });\n  }(e.orderBy);\n\n  i && (n.structuredQuery.orderBy = i);\n\n  var o = function (t, e) {\n    return t.S || ct(e) ? e : {\n      value: e\n    };\n  }(t, e.limit);\n\n  var u;\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n    before: (u = e.startAt).inclusive,\n    values: u.position\n  }), e.endAt && (n.structuredQuery.endAt = function (t) {\n    return {\n      before: !t.inclusive,\n      values: t.position\n    };\n  } // visible for testing\n  (e.endAt)), n;\n}\n\nfunction Qe(t) {\n  return xe[t];\n} // visible for testing\n\n\nfunction Ye(t) {\n  return Fe[t];\n}\n\nfunction He(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction Je(t) {\n  var e = [];\n  return t.fields.forEach(function (t) {\n    return e.push(t.canonicalString());\n  }), {\n    fieldPaths: e\n  };\n}\n\nfunction Xe(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction Ze(t) {\n  return new Se(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nvar tn = /*#__PURE__*/function () {\n  function tn(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n\n    _classCallCheck(this, tn);\n\n    this.k = t, this.timerId = e, this.C = n, this.L = r, this.M = s, this.U = 0, this.j = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.B = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  _createClass(tn, [{\n    key: \"reset\",\n    value: function reset() {\n      this.U = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n\n  }, {\n    key: \"G\",\n    value: function G() {\n      this.U = this.M;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n\n  }, {\n    key: \"W\",\n    value: function W(t) {\n      var _this22 = this;\n\n      // Cancel any pending backoff operation.\n      this.cancel(); // First schedule using the current base (which may be 0 and should be\n      // honored as such).\n\n      var e = Math.floor(this.U + this.K()),\n          n = Math.max(0, Date.now() - this.B),\n          r = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n      r > 0 && _m(\"ExponentialBackoff\", \"Backing off for \".concat(r, \" ms (base delay: \").concat(this.U, \" ms, delay with jitter: \").concat(e, \" ms, last attempt: \").concat(n, \" ms ago)\")), this.j = this.k.enqueueAfterDelay(this.timerId, r, function () {\n        return _this22.B = Date.now(), t();\n      }), // Apply backoff factor to determine next delay and ensure it is within\n      // bounds.\n      this.U *= this.L, this.U < this.C && (this.U = this.C), this.U > this.M && (this.U = this.M);\n    }\n  }, {\n    key: \"Y\",\n    value: function Y() {\n      null !== this.j && (this.j.skipDelay(), this.j = null);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      null !== this.j && (this.j.cancel(), this.j = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n  }, {\n    key: \"K\",\n    value: function K() {\n      return (Math.random() - .5) * this.U;\n    }\n  }]);\n\n  return tn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nvar en = /*#__PURE__*/function (_ref3) {\n  _inherits(en, _ref3);\n\n  var _super21 = _createSuper(en);\n\n  function en(t, e, n, r) {\n    var _this23;\n\n    _classCallCheck(this, en);\n\n    _this23 = _super21.call(this), _this23.authCredentials = t, _this23.appCheckCredentials = e, _this23.H = n, _this23.q = r, _this23.J = !1;\n    return _this23;\n  }\n\n  _createClass(en, [{\n    key: \"X\",\n    value: function X() {\n      if (this.J) throw new L(x, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */\n\n  }, {\n    key: \"m\",\n    value: function m(t, e, n) {\n      var _this24 = this;\n\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            r = _ref5[0],\n            s = _ref5[1];\n\n        return _this24.H.m(t, e, n, r, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === D && (_this24.authCredentials.invalidateToken(), _this24.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n      });\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n\n  }, {\n    key: \"T\",\n    value: function T(t, e, n, r) {\n      var _this25 = this;\n\n      return this.X(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            s = _ref7[0],\n            i = _ref7[1];\n\n        return _this25.H.T(t, e, n, s, i, r);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === D && (_this25.authCredentials.invalidateToken(), _this25.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      this.J = !0;\n    }\n  }]);\n\n  return en;\n}( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  return _createClass(_class4);\n}()); // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n\nfunction nn(_x5, _x6) {\n  return _nn.apply(this, arguments);\n}\n\nfunction _nn() {\n  _nn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(t, e) {\n    var n, r, s;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            n = b(t), r = Be(n.q) + \"/documents\", s = {\n              writes: e.map(function (t) {\n                return We(n.q, t);\n              })\n            };\n            _context7.next = 3;\n            return n.m(\"Commit\", r, s);\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _nn.apply(this, arguments);\n}\n\nfunction rn(_x7, _x8) {\n  return _rn.apply(this, arguments);\n}\n\nfunction _rn() {\n  _rn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(t, e) {\n    var n, r, s, i, o, u;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            n = b(t);\n            r = Be(n.q) + \"/documents\";\n            s = {\n              documents: e.map(function (t) {\n                return Me(n.q, t);\n              })\n            };\n            _context8.next = 5;\n            return n.T(\"BatchGetDocuments\", r, s, e.length);\n\n          case 5:\n            i = _context8.sent;\n            o = new Map();\n            i.forEach(function (t) {\n              var e = Ge(n.q, t);\n              o.set(e.key.toString(), e);\n            });\n            u = [];\n            return _context8.abrupt(\"return\", (e.forEach(function (t) {\n              var e = o.get(t.toString());\n              v(!!e), u.push(e);\n            }), u));\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _rn.apply(this, arguments);\n}\n\nfunction sn(_x9, _x10) {\n  return _sn.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _sn() {\n  _sn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(t, e) {\n    var n, r;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            n = b(t), r = Ke(n.q, ye(e));\n            _context9.next = 3;\n            return n.T(\"RunQuery\", r.parent, {\n              structuredQuery: r.structuredQuery\n            });\n\n          case 3:\n            return _context9.abrupt(\"return\", _context9.sent.filter(function (t) {\n              return !!t.document;\n            }).map(function (t) {\n              return function (t, e, n) {\n                var r = Ue(t, e.name),\n                    s = Ce(e.updateTime),\n                    i = new Yt({\n                  mapValue: {\n                    fields: e.fields\n                  }\n                }),\n                    o = Ht.newFoundDocument(r, s, i);\n                return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n              }(n.q, t.document, void 0);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _sn.apply(this, arguments);\n}\n\nvar on = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\n\nfunction un(t) {\n  if (t._terminated) throw new L(x, \"The client has already been terminated.\");\n\n  if (!on.has(t)) {\n    _m(\"ComponentProvider\", \"Initializing Datastore\");\n\n    var i = function (t) {\n      return new wt(t, fetch.bind(null));\n    }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), new Y(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))),\n        o = Ze(t._databaseId),\n        u = function (t, e, n, r) {\n      return new en(t, e, n, r);\n    }(t._authCredentials, t._appCheckCredentials, i, o);\n\n    on.set(t, u);\n  }\n\n  var e, n, r, s;\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  return on.get(t);\n}\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nvar cn = /*#__PURE__*/function () {\n  function cn(t) {\n    _classCallCheck(this, cn);\n\n    var e;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new L(A, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(A, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, function (t, e, n, r) {\n      if (!0 === e && !0 === r) throw new L(A, \"\".concat(t, \" and \").concat(n, \" cannot be used together.\"));\n    }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  _createClass(cn, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n  }]);\n\n  return cn;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\n\n\nvar an = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function an(t, e, n) {\n    _classCallCheck(this, an);\n\n    this._authCredentials = e, this._appCheckCredentials = n,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new cn({}), this._settingsFrozen = !1, t instanceof H ? this._databaseId = t : (this._app = t, this._databaseId = function (t) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new L(A, '\"projectId\" not provided in firebase.initializeApp.');\n      return new H(t.options.projectId);\n    }\n    /**\n    * Initializes a new instance of Cloud Firestore with the provided settings.\n    * Can only be called before any other functions, including\n    * {@link getFirestore}. If the custom settings are empty, this function is\n    * equivalent to calling {@link getFirestore}.\n    *\n    * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n    * be associated.\n    * @param settings - A settings object to configure the `Firestore` instance.\n    * @returns A newly initialized `Firestore` instance.\n    */\n    (t));\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  _createClass(an, [{\n    key: \"app\",\n    get: function get() {\n      if (!this._app) throw new L(x, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n      return this._app;\n    }\n  }, {\n    key: \"_initialized\",\n    get: function get() {\n      return this._settingsFrozen;\n    }\n  }, {\n    key: \"_terminated\",\n    get: function get() {\n      return void 0 !== this._terminateTask;\n    }\n  }, {\n    key: \"_setSettings\",\n    value: function _setSettings(t) {\n      if (this._settingsFrozen) throw new L(x, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n      this._settings = new cn(t), void 0 !== t.credentials && (this._authCredentials = function (t) {\n        if (!t) return new j();\n\n        switch (t.type) {\n          case \"gapi\":\n            var e = t.client; // Make sure this really is a Gapi client.\n\n            return v(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), new W(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n          case \"provider\":\n            return t.client;\n\n          default:\n            throw new L(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n        }\n      }(t.credentials));\n    }\n  }, {\n    key: \"_getSettings\",\n    value: function _getSettings() {\n      return this._settings;\n    }\n  }, {\n    key: \"_freezeSettings\",\n    value: function _freezeSettings() {\n      return this._settingsFrozen = !0, this._settings;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        app: this._app,\n        databaseId: this._databaseId,\n        settings: this._settings\n      };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n\n  }, {\n    key: \"_terminate\",\n    value: function _terminate() {\n      return function (t) {\n        var e = on.get(t);\n        e && (_m(\"ComponentProvider\", \"Removing Datastore\"), on.delete(t), e.terminate());\n      }(this), Promise.resolve();\n    }\n  }]);\n\n  return an;\n}();\n\nfunction hn(t, e) {\n  var n = _getProvider(t, \"firestore/lite\");\n\n  if (n.isInitialized()) throw new L(x, \"Firestore can only be initialized once per app.\");\n  return n.initialize({\n    options: e\n  });\n}\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */\n\n\nfunction ln() {\n  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\n\n\nfunction fn(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var s;\n\n  var i = (t = ot(t, an))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, i), {\n    host: \"\".concat(e, \":\").concat(n),\n    ssl: !1\n  })), r.mockUserToken) {\n    var _e11, _n7;\n\n    if (\"string\" == typeof r.mockUserToken) _e11 = r.mockUserToken, _n7 = l.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      _e11 = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n\n      var _i2 = r.mockUserToken.sub || r.mockUserToken.user_id;\n\n      if (!_i2) throw new L(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      _n7 = new l(_i2);\n    }\n    t._authCredentials = new B(new U(_e11, _n7));\n  }\n}\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction dn(t) {\n  return t = ot(t, an), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nvar wn = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function wn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, wn);\n\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  _createClass(wn, [{\n    key: \"_path\",\n    get: function get() {\n      return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return new pn(this.firestore, this.converter, this._key.path.popLast());\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new wn(this.firestore, t, this._key);\n    }\n  }]);\n\n  return wn;\n}();\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nvar mn = /*#__PURE__*/function () {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  function mn(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, mn);\n\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  _createClass(mn, [{\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new mn(this.firestore, t, this._query);\n    }\n  }]);\n\n  return mn;\n}();\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nvar pn = /*#__PURE__*/function (_mn) {\n  _inherits(pn, _mn);\n\n  var _super22 = _createSuper(pn);\n\n  /** @hideconstructor */\n  function pn(t, e, n) {\n    var _this26;\n\n    _classCallCheck(this, pn);\n\n    _this26 = _super22.call(this, t, e, new fe(n)), _this26._path = n,\n    /** The type of this Firestore reference. */\n    _this26.type = \"collection\";\n    return _this26;\n  }\n  /** The collection's identifier. */\n\n\n  _createClass(pn, [{\n    key: \"id\",\n    get: function get() {\n      return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var t = this._path.popLast();\n\n      return t.isEmpty() ? null : new wn(this.firestore,\n      /* converter= */\n      null, new et(t));\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new pn(this.firestore, t, this._path);\n    }\n  }]);\n\n  return pn;\n}(mn);\n\nfunction yn(t, e) {\n  for (var _len5 = arguments.length, n = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n    n[_key5 - 2] = arguments[_key5];\n  }\n\n  if (t = getModularInstance(t), nt(\"collection\", \"path\", e), t instanceof an) {\n    var r = X.fromString.apply(X, [e].concat(n));\n    return st(r), new pn(t,\n    /* converter= */\n    null, r);\n  }\n\n  {\n    if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r2 = t._path.child(X.fromString.apply(X, [e].concat(n)));\n\n    return st(_r2), new pn(t.firestore,\n    /* converter= */\n    null, _r2);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction _n(t, e) {\n  if (t = ot(t, an), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(A, \"Invalid collection ID '\".concat(e, \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\"));\n  return new mn(t,\n  /* converter= */\n  null,\n  /**\n  * Creates a new Query for a collection group query that matches all documents\n  * within the provided collection group.\n  */\n  function (t) {\n    return new fe(X.emptyPath(), t);\n  }(e));\n}\n\nfunction gn(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = pt.R()), nt(\"doc\", \"path\", e), t instanceof an) {\n    var r = X.fromString.apply(X, [e].concat(n));\n    return rt(r), new wn(t,\n    /* converter= */\n    null, new et(r));\n  }\n\n  {\n    if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _r3 = t._path.child(X.fromString.apply(X, [e].concat(n)));\n\n    return rt(_r3), new wn(t.firestore, t instanceof pn ? t.converter : null, new et(_r3));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction vn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof wn || t instanceof pn) && (e instanceof wn || e instanceof pn) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction bn(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof mn && e instanceof mn && t.firestore === e.firestore && _e(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nvar En = /*#__PURE__*/function () {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  function En() {\n    _classCallCheck(this, En);\n\n    for (var _len7 = arguments.length, t = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      t[_key7] = arguments[_key7];\n    }\n\n    for (var e = 0; e < t.length; ++e) {\n      if (0 === t[e].length) throw new L(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    }\n\n    this._internalPath = new tt(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  _createClass(En, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._internalPath.isEqual(t._internalPath);\n    }\n  }]);\n\n  return En;\n}();\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction Tn() {\n  return new En(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nvar In = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function In(t) {\n    _classCallCheck(this, In);\n\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  _createClass(In, [{\n    key: \"toBase64\",\n    value:\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    function toBase64() {\n      return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._byteString.isEqual(t._byteString);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      try {\n        return new In(Nt.fromBase64String(t));\n      } catch (t) {\n        throw new L(A, \"Failed to construct data from Base64 string: \" + t);\n      }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      return new In(Nt.fromUint8Array(t));\n    }\n  }]);\n\n  return In;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nvar An = /*#__PURE__*/_createClass(\n/**\n * @param _methodName - The public API endpoint that returns this class.\n * @hideconstructor\n */\nfunction An(t) {\n  _classCallCheck(this, An);\n\n  this._methodName = t;\n});\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nvar Rn = /*#__PURE__*/function () {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  function Rn(t, e) {\n    _classCallCheck(this, Rn);\n\n    if (!isFinite(t) || t < -90 || t > 90) throw new L(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new L(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  _createClass(Rn, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        latitude: this._lat,\n        longitude: this._long\n      };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n  }]);\n\n  return Rn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Pn = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nvar Vn = /*#__PURE__*/function () {\n  function Vn(t, e, n) {\n    _classCallCheck(this, Vn);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(Vn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return null !== this.fieldMask ? new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ve(t, this.data, e, this.fieldTransforms);\n    }\n  }]);\n\n  return Vn;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nvar Nn = /*#__PURE__*/function () {\n  function Nn(t, // The fieldMask does not include document transforms.\n  e, n) {\n    _classCallCheck(this, Nn);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(Nn, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n  }]);\n\n  return Nn;\n}();\n\nfunction Dn(t) {\n  switch (t) {\n    case 0\n    /* Set */\n    : // fall through\n\n    case 2\n    /* MergeSet */\n    : // fall through\n\n    case 1\n    /* Update */\n    :\n      return !0;\n\n    case 3\n    /* Argument */\n    :\n    case 4\n    /* ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw g();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nvar $n = /*#__PURE__*/function () {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  function $n(t, e, n, r, s, i) {\n    _classCallCheck(this, $n);\n\n    this.settings = t, this.databaseId = e, this.q = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n  }\n\n  _createClass($n, [{\n    key: \"path\",\n    get: function get() {\n      return this.settings.path;\n    }\n  }, {\n    key: \"tt\",\n    get: function get() {\n      return this.settings.tt;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n\n  }, {\n    key: \"et\",\n    value: function et(t) {\n      return new $n(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.q, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n  }, {\n    key: \"nt\",\n    value: function nt(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.et({\n        path: n,\n        rt: !1\n      });\n      return r.st(t), r;\n    }\n  }, {\n    key: \"it\",\n    value: function it(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          r = this.et({\n        path: n,\n        rt: !1\n      });\n      return r.Z(), r;\n    }\n  }, {\n    key: \"ot\",\n    value: function ot(t) {\n      // TODO(b/34871131): We don't support array paths right now; so make path\n      // undefined.\n      return this.et({\n        path: void 0,\n        rt: !0\n      });\n    }\n  }, {\n    key: \"ut\",\n    value: function ut(t) {\n      return Jn(t, this.settings.methodName, this.settings.ct || !1, this.path, this.settings.at);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n  }, {\n    key: \"contains\",\n    value: function contains(t) {\n      return void 0 !== this.fieldMask.find(function (e) {\n        return t.isPrefixOf(e);\n      }) || void 0 !== this.fieldTransforms.find(function (e) {\n        return t.isPrefixOf(e.field);\n      });\n    }\n  }, {\n    key: \"Z\",\n    value: function Z() {\n      // TODO(b/34871131): Remove null check once we have proper paths for fields\n      // within arrays.\n      if (this.path) for (var t = 0; t < this.path.length; t++) {\n        this.st(this.path.get(t));\n      }\n    }\n  }, {\n    key: \"st\",\n    value: function st(t) {\n      if (0 === t.length) throw this.ut(\"Document fields must not be empty\");\n      if (Dn(this.tt) && Pn.test(t)) throw this.ut('Document fields cannot begin and end with \"__\"');\n    }\n  }]);\n\n  return $n;\n}();\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nvar xn = /*#__PURE__*/function () {\n  function xn(t, e, n) {\n    _classCallCheck(this, xn);\n\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.q = n || Ze(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  _createClass(xn, [{\n    key: \"ht\",\n    value: function ht(t, e, n) {\n      var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      return new $n({\n        tt: t,\n        methodName: e,\n        at: n,\n        path: tt.emptyPath(),\n        rt: !1,\n        ct: r\n      }, this.databaseId, this.q, this.ignoreUndefinedProperties);\n    }\n  }]);\n\n  return xn;\n}();\n\nfunction Fn(t) {\n  var e = t._freezeSettings(),\n      n = Ze(t._databaseId);\n\n  return new xn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction Sn(t, e, n, r, s) {\n  var i = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var o = t.ht(i.merge || i.mergeFields ? 2\n  /* MergeSet */\n  : 0\n  /* Set */\n  , e, n, s);\n  Kn(\"Data must be an object, but it was:\", o, r);\n  var u = Gn(r, o);\n  var c, a;\n  if (i.merge) c = new Vt(o.fieldMask), a = o.fieldTransforms;else if (i.mergeFields) {\n    var _t15 = [];\n\n    var _iterator8 = _createForOfIteratorHelper(i.mergeFields),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _r4 = _step8.value;\n\n        var _s = Qn(e, _r4, n);\n\n        if (!o.contains(_s)) throw new L(A, \"Field '\".concat(_s, \"' is specified in your field mask but missing from your input data.\"));\n        Xn(_t15, _s) || _t15.push(_s);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    c = new Vt(_t15), a = o.fieldTransforms.filter(function (t) {\n      return c.covers(t.field);\n    });\n  } else c = null, a = o.fieldTransforms;\n  return new Vn(new Yt(u), c, a);\n}\n\nvar qn = /*#__PURE__*/function (_An) {\n  _inherits(qn, _An);\n\n  var _super23 = _createSuper(qn);\n\n  function qn() {\n    _classCallCheck(this, qn);\n\n    return _super23.apply(this, arguments);\n  }\n\n  _createClass(qn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      if (2\n      /* MergeSet */\n      !== t.tt) throw 1\n      /* Update */\n      === t.tt ? t.ut(\"\".concat(this._methodName, \"() can only appear at the top level of your update data\")) : t.ut(\"\".concat(this._methodName, \"() cannot be used with set() unless you pass {merge:true}\")); // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n\n      return t.fieldMask.push(t.path), null;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof qn;\n    }\n  }]);\n\n  return qn;\n}(An);\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction On(t, e, n) {\n  return new $n({\n    tt: 3\n    /* Argument */\n    ,\n    at: e.settings.at,\n    methodName: t._methodName,\n    rt: n\n  }, e.databaseId, e.q, e.ignoreUndefinedProperties);\n}\n\nvar kn = /*#__PURE__*/function (_An2) {\n  _inherits(kn, _An2);\n\n  var _super24 = _createSuper(kn);\n\n  function kn() {\n    _classCallCheck(this, kn);\n\n    return _super24.apply(this, arguments);\n  }\n\n  _createClass(kn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      return new Ae(t.path, new be());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof kn;\n    }\n  }]);\n\n  return kn;\n}(An);\n\nvar Cn = /*#__PURE__*/function (_An3) {\n  _inherits(Cn, _An3);\n\n  var _super25 = _createSuper(Cn);\n\n  function Cn(t, e) {\n    var _this27;\n\n    _classCallCheck(this, Cn);\n\n    _this27 = _super25.call(this, t), _this27.lt = e;\n    return _this27;\n  }\n\n  _createClass(Cn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = On(this, t,\n      /*array=*/\n      !0),\n          n = this.lt.map(function (t) {\n        return zn(t, e);\n      }),\n          r = new Ee(n);\n      return new Ae(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Cn;\n}(An);\n\nvar Ln = /*#__PURE__*/function (_An4) {\n  _inherits(Ln, _An4);\n\n  var _super26 = _createSuper(Ln);\n\n  function Ln(t, e) {\n    var _this28;\n\n    _classCallCheck(this, Ln);\n\n    _this28 = _super26.call(this, t), _this28.lt = e;\n    return _this28;\n  }\n\n  _createClass(Ln, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = On(this, t,\n      /*array=*/\n      !0),\n          n = this.lt.map(function (t) {\n        return zn(t, e);\n      }),\n          r = new Te(n);\n      return new Ae(t.path, r);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Ln;\n}(An);\n\nvar Mn = /*#__PURE__*/function (_An5) {\n  _inherits(Mn, _An5);\n\n  var _super27 = _createSuper(Mn);\n\n  function Mn(t, e) {\n    var _this29;\n\n    _classCallCheck(this, Mn);\n\n    _this29 = _super27.call(this, t), _this29.ft = e;\n    return _this29;\n  }\n\n  _createClass(Mn, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = new Ie(t.q, ge(t.q, this.ft));\n      return new Ae(t.path, e);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return Mn;\n}(An);\n/** Parse update data from an update() call. */\n\n\nfunction Un(t, e, n, r) {\n  var s = t.ht(1\n  /* Update */\n  , e, n);\n  Kn(\"Data must be an object, but it was:\", s, r);\n  var i = [],\n      o = Yt.empty();\n  Et(r, function (t, r) {\n    var u = Hn(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    r = getModularInstance(r);\n    var c = s.it(u);\n    if (r instanceof qn) // Add it to the field mask, but don't add anything to updateData.\n      i.push(u);else {\n      var _t16 = zn(r, c);\n\n      null != _t16 && (i.push(u), o.set(u, _t16));\n    }\n  });\n  var u = new Vt(i);\n  return new Nn(o, u, s.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction jn(t, e, n, r, s, i) {\n  var o = t.ht(1\n  /* Update */\n  , e, n),\n      u = [Qn(e, r, n)],\n      c = [s];\n  if (i.length % 2 != 0) throw new L(A, \"Function \".concat(e, \"() needs to be called with an even number of arguments that alternate between field names and values.\"));\n\n  for (var _t17 = 0; _t17 < i.length; _t17 += 2) {\n    u.push(Qn(e, i[_t17])), c.push(i[_t17 + 1]);\n  }\n\n  var a = [],\n      l = Yt.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (var _t18 = u.length - 1; _t18 >= 0; --_t18) {\n    if (!Xn(a, u[_t18])) {\n      var _e12 = u[_t18];\n      var _n8 = c[_t18]; // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      _n8 = getModularInstance(_n8);\n\n      var _r5 = o.it(_e12);\n\n      if (_n8 instanceof qn) // Add it to the field mask, but don't add anything to updateData.\n        a.push(_e12);else {\n        var _t19 = zn(_n8, _r5);\n\n        null != _t19 && (a.push(_e12), l.set(_e12, _t19));\n      }\n    }\n  }\n\n  var f = new Vt(a);\n  return new Nn(l, f, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction Bn(t, e, n) {\n  var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return zn(n, t.ht(r ? 4\n  /* ArrayArgument */\n  : 3\n  /* Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction zn(t, e) {\n  if (Wn( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return Kn(\"Unsupported field value:\", e, t), Gn(t, e);\n  if (t instanceof An) // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!Dn(e.tt)) throw e.ut(\"\".concat(t._methodName, \"() can only be used with update() and set()\"));\n      if (!e.path) throw e.ut(\"\".concat(t._methodName, \"() is not currently supported inside arrays\"));\n\n      var n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.rt && 4\n    /* ArrayArgument */\n    !== e.tt) throw e.ut(\"Nested arrays are not supported\");\n    return function (t, e) {\n      var n = [];\n      var r = 0;\n\n      var _iterator9 = _createForOfIteratorHelper(t),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var s = _step9.value;\n\n          var _t20 = zn(s, e.ot(r));\n\n          null == _t20 && ( // Just include nulls in the array for fields being replaced with a\n          // sentinel.\n          _t20 = {\n            nullValue: \"NULL_VALUE\"\n          }), n.push(_t20), r++;\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return ge(e.q, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      var n = gt.fromDate(t);\n      return {\n        timestampValue: qe(e.q, n)\n      };\n    }\n\n    if (t instanceof gt) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      var _n9 = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n\n      return {\n        timestampValue: qe(e.q, _n9)\n      };\n    }\n\n    if (t instanceof Rn) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof In) return {\n      bytesValue: Oe(e.q, t._byteString)\n    };\n\n    if (t instanceof wn) {\n      var _n10 = e.databaseId,\n          r = t.firestore._databaseId;\n      if (!r.isEqual(_n10)) throw e.ut(\"Document reference is for database \".concat(r.projectId, \"/\").concat(r.database, \" but should be for database \").concat(_n10.projectId, \"/\").concat(_n10.database));\n      return {\n        referenceValue: Le(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.ut(\"Unsupported field value: \".concat(it(t)));\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction Gn(t, e) {\n  var n = {};\n  return !function (t) {\n    for (var _e13 in t) {\n      if (Object.prototype.hasOwnProperty.call(t, _e13)) return !1;\n    }\n\n    return !0;\n  }(t) ? Et(t, function (t, r) {\n    var s = zn(r, e.nt(t));\n    null != s && (n[t] = s);\n  }) : // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction Wn(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Rn || t instanceof In || t instanceof wn || t instanceof An);\n}\n\nfunction Kn(t, e, n) {\n  if (!Wn(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    var r = it(n);\n    throw \"an object\" === r ? e.ut(t + \" a custom object\") : e.ut(t + \" \" + r);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction Qn(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof En) return e._internalPath;\n  if (\"string\" == typeof e) return Hn(t, e);\n  throw Jn(\"Field path arguments must be of type string or \", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nvar Yn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction Hn(t, e, n) {\n  if (e.search(Yn) >= 0) throw Jn(\"Invalid field path (\".concat(e, \"). Paths must not contain '~', '*', '/', '[', or ']'\"), t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return _construct(En, _toConsumableArray(e.split(\".\")))._internalPath;\n  } catch (r) {\n    throw Jn(\"Invalid field path (\".concat(e, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"), t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction Jn(t, e, n, r, s) {\n  var i = r && !r.isEmpty(),\n      o = void 0 !== s;\n  var u = \"Function \".concat(e, \"() called with invalid data\");\n  n && (u += \" (via `toFirestore()`)\"), u += \". \";\n  var c = \"\";\n  return (i || o) && (c += \" (found\", i && (c += \" in field \".concat(r)), o && (c += \" in document \".concat(s)), c += \")\"), new L(A, u + t + c);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction Xn(t, e) {\n  return t.some(function (t) {\n    return t.isEqual(e);\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nvar Zn = /*#__PURE__*/function () {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  function Zn(t, e, n, r, s) {\n    _classCallCheck(this, Zn);\n\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, this._converter = s;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  _createClass(Zn, [{\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new wn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var t = new tr(this._firestore, this._userDataWriter, this._key, this._document,\n          /* converter= */\n          null);\n          return this._converter.fromFirestore(t);\n        }\n\n        return this._userDataWriter.convertValue(this._document.data.value);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      if (this._document) {\n        var e = this._document.data.field(rr(\"DocumentSnapshot.get\", t));\n\n        if (null !== e) return this._userDataWriter.convertValue(e);\n      }\n    }\n  }]);\n\n  return Zn;\n}();\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nvar tr = /*#__PURE__*/function (_Zn) {\n  _inherits(tr, _Zn);\n\n  var _super28 = _createSuper(tr);\n\n  function tr() {\n    _classCallCheck(this, tr);\n\n    return _super28.apply(this, arguments);\n  }\n\n  _createClass(tr, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      return _get(_getPrototypeOf(tr.prototype), \"data\", this).call(this);\n    }\n  }]);\n\n  return tr;\n}(Zn);\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nvar er = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function er(t, e) {\n    _classCallCheck(this, er);\n\n    this._docs = e, this.query = t;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  _createClass(er, [{\n    key: \"docs\",\n    get: function get() {\n      return _toConsumableArray(this._docs);\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, e) {\n      this._docs.forEach(t, e);\n    }\n  }]);\n\n  return er;\n}();\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction nr(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Zn && e instanceof Zn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof er && e instanceof er && bn(t.query, e.query) && _t(t.docs, e.docs, nr);\n}\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction rr(t, e) {\n  return \"string\" == typeof e ? Hn(t, e) : e instanceof En ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nvar sr = /*#__PURE__*/_createClass(function sr() {\n  _classCallCheck(this, sr);\n});\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\n\n\nfunction ir(t) {\n  for (var _len8 = arguments.length, e = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    e[_key8 - 1] = arguments[_key8];\n  }\n\n  for (var _i3 = 0, _e14 = e; _i3 < _e14.length; _i3++) {\n    var n = _e14[_i3];\n    t = n._apply(t);\n  }\n\n  return t;\n}\n\nvar or = /*#__PURE__*/function (_sr) {\n  _inherits(or, _sr);\n\n  var _super29 = _createSuper(or);\n\n  function or(t, e, n) {\n    var _this30;\n\n    _classCallCheck(this, or);\n\n    _this30 = _super29.call(this), _this30.dt = t, _this30.wt = e, _this30.yt = n, _this30.type = \"where\";\n    return _this30;\n  }\n\n  _createClass(or, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Fn(t.firestore),\n          n = function (t, e, n, r, s, i, o) {\n        var u;\n\n        if (s.isKeyField()) {\n          if (\"array-contains\"\n          /* ARRAY_CONTAINS */\n          === i || \"array-contains-any\"\n          /* ARRAY_CONTAINS_ANY */\n          === i) throw new L(A, \"Invalid Query. You can't perform '\".concat(i, \"' queries on documentId().\"));\n\n          if (\"in\"\n          /* IN */\n          === i || \"not-in\"\n          /* NOT_IN */\n          === i) {\n            br(o, i);\n            var _e15 = [];\n\n            var _iterator10 = _createForOfIteratorHelper(o),\n                _step10;\n\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                var _n11 = _step10.value;\n\n                _e15.push(vr(r, t, _n11));\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n\n            u = {\n              arrayValue: {\n                values: _e15\n              }\n            };\n          } else u = vr(r, t, o);\n        } else \"in\"\n        /* IN */\n        !== i && \"not-in\"\n        /* NOT_IN */\n        !== i && \"array-contains-any\"\n        /* ARRAY_CONTAINS_ANY */\n        !== i || br(o, i), u = Bn(n, e, o,\n        /* allowArrays= */\n        \"in\"\n        /* IN */\n        === i || \"not-in\"\n        /* NOT_IN */\n        === i);\n\n        var c = Zt.create(s, i, u);\n        return function (t, e) {\n          if (e.D()) {\n            var _n12 = we(t);\n\n            if (null !== _n12 && !_n12.isEqual(e.field)) throw new L(A, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\".concat(_n12.toString(), \"' and '\").concat(e.field.toString(), \"'\"));\n\n            var _r6 = de(t);\n\n            null !== _r6 && Er(t, e.field, _r6);\n          }\n\n          var n = function (t, e) {\n            var _iterator11 = _createForOfIteratorHelper(t.filters),\n                _step11;\n\n            try {\n              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                var _n13 = _step11.value;\n                if (e.indexOf(_n13.op) >= 0) return _n13.op;\n              }\n            } catch (err) {\n              _iterator11.e(err);\n            } finally {\n              _iterator11.f();\n            }\n\n            return null;\n          }(t,\n          /**\n          * Given an operator, returns the set of operators that cannot be used with it.\n          *\n          * Operators in a query must adhere to the following set of rules:\n          * 1. Only one array operator is allowed.\n          * 2. Only one disjunctive operator is allowed.\n          * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n          * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n          *\n          * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n          * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n          */\n          function (t) {\n            switch (t) {\n              case \"!=\"\n              /* NOT_EQUAL */\n              :\n                return [\"!=\"\n                /* NOT_EQUAL */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains\"\n              /* ARRAY_CONTAINS */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"in\"\n              /* IN */\n              :\n                return [\"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"not-in\"\n              /* NOT_IN */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                , \"!=\"\n                /* NOT_EQUAL */\n                ];\n\n              default:\n                return [];\n            }\n          }(e.op));\n\n          if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n            throw n === e.op ? new L(A, \"Invalid query. You cannot use more than one '\".concat(e.op.toString(), \"' filter.\")) : new L(A, \"Invalid query. You cannot use '\".concat(e.op.toString(), \"' filters with '\").concat(n.toString(), \"' filters.\"));\n        }(t, c), c;\n      }(t._query, \"where\", e, t.firestore._databaseId, this.dt, this.wt, this.yt);\n\n      return new mn(t.firestore, t.converter, function (t, e) {\n        var n = t.filters.concat([e]);\n        return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, n));\n    }\n  }]);\n\n  return or;\n}(sr);\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */\n\n\nfunction ur(t, e, n) {\n  var r = e,\n      s = rr(\"where\", t);\n  return new or(s, r, n);\n}\n\nvar cr = /*#__PURE__*/function (_sr2) {\n  _inherits(cr, _sr2);\n\n  var _super30 = _createSuper(cr);\n\n  function cr(t, e) {\n    var _this31;\n\n    _classCallCheck(this, cr);\n\n    _this31 = _super30.call(this), _this31.dt = t, _this31._t = e, _this31.type = \"orderBy\";\n    return _this31;\n  }\n\n  _createClass(cr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = function (t, e, n) {\n        if (null !== t.startAt) throw new L(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n        if (null !== t.endAt) throw new L(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n        var r = new ae(e, n);\n        return function (t, e) {\n          if (null === de(t)) {\n            // This is the first order by. It must match any inequality.\n            var _n14 = we(t);\n\n            null !== _n14 && Er(t, _n14, e.field);\n          }\n        }(t, r), r;\n      }\n      /**\n      * Create a `Bound` from a query and a document.\n      *\n      * Note that the `Bound` will always include the key of the document\n      * and so only the provided document will compare equal to the returned\n      * position.\n      *\n      * Will throw if the document does not contain all fields of the order by\n      * of the query or if any of the fields in the order by are an uncommitted\n      * server timestamp.\n      */\n      (t._query, this.dt, this._t);\n\n      return new mn(t.firestore, t.converter, function (t, e) {\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var n = t.explicitOrderBy.concat([e]);\n        return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, e));\n    }\n  }]);\n\n  return cr;\n}(sr);\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */\n\n\nfunction ar(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  var n = e,\n      r = rr(\"orderBy\", t);\n  return new cr(r, n);\n}\n\nvar hr = /*#__PURE__*/function (_sr3) {\n  _inherits(hr, _sr3);\n\n  var _super31 = _createSuper(hr);\n\n  function hr(t, e, n) {\n    var _this32;\n\n    _classCallCheck(this, hr);\n\n    _this32 = _super31.call(this), _this32.type = t, _this32.gt = e, _this32.vt = n;\n    return _this32;\n  }\n\n  _createClass(hr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      return new mn(t.firestore, t.converter, function (t, e, n) {\n        return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n      }(t._query, this.gt, this.vt));\n    }\n  }]);\n\n  return hr;\n}(sr);\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction lr(t) {\n  return ut(\"limit\", t), new hr(\"limit\", t, \"F\"\n  /* First */\n  );\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction fr(t) {\n  return ut(\"limitToLast\", t), new hr(\"limitToLast\", t, \"L\"\n  /* Last */\n  );\n}\n\nvar dr = /*#__PURE__*/function (_sr4) {\n  _inherits(dr, _sr4);\n\n  var _super32 = _createSuper(dr);\n\n  function dr(t, e, n) {\n    var _this33;\n\n    _classCallCheck(this, dr);\n\n    _this33 = _super32.call(this), _this33.type = t, _this33.bt = e, _this33.Et = n;\n    return _this33;\n  }\n\n  _createClass(dr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = gr(t, this.type, this.bt, this.Et);\n      return new mn(t.firestore, t.converter, function (t, e) {\n        return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n      }(t._query, e));\n    }\n  }]);\n\n  return dr;\n}(sr);\n\nfunction wr() {\n  for (var _len9 = arguments.length, t = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    t[_key9] = arguments[_key9];\n  }\n\n  return new dr(\"startAt\", t,\n  /*inclusive=*/\n  !0);\n}\n\nfunction mr() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  return new dr(\"startAfter\", t,\n  /*inclusive=*/\n  !1);\n}\n\nvar pr = /*#__PURE__*/function (_sr5) {\n  _inherits(pr, _sr5);\n\n  var _super33 = _createSuper(pr);\n\n  function pr(t, e, n) {\n    var _this34;\n\n    _classCallCheck(this, pr);\n\n    _this34 = _super33.call(this), _this34.type = t, _this34.bt = e, _this34.Et = n;\n    return _this34;\n  }\n\n  _createClass(pr, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = gr(t, this.type, this.bt, this.Et);\n      return new mn(t.firestore, t.converter, function (t, e) {\n        return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n      }(t._query, e));\n    }\n  }]);\n\n  return pr;\n}(sr);\n\nfunction yr() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return new pr(\"endBefore\", t,\n  /*inclusive=*/\n  !1);\n}\n\nfunction _r() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return new pr(\"endAt\", t,\n  /*inclusive=*/\n  !0);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction gr(t, e, n, r) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof Zn) return function (t, e, n, r, s) {\n    if (!r) throw new L(P, \"Can't use a DocumentSnapshot that doesn't exist for \".concat(n, \"().\"));\n    var i = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    var _iterator12 = _createForOfIteratorHelper(pe(t)),\n        _step12;\n\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var _n15 = _step12.value;\n        if (_n15.field.isKeyField()) i.push(Bt(e, r.key));else {\n          var _t21 = r.data.field(_n15.field);\n\n          if (St(_t21)) throw new L(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + _n15.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n          if (null === _t21) {\n            var _t22 = _n15.field.canonicalString();\n\n            throw new L(A, \"Invalid query. You are trying to start or end a query using a document for which the field '\".concat(_t22, \"' (used as the orderBy) does not exist.\"));\n          }\n\n          i.push(_t21);\n        }\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n\n    return new ce(i, s);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, r);\n  {\n    var s = Fn(t.firestore);\n    return function (t, e, n, r, s, i) {\n      // Use explicit order by's because it has to match the query the user made\n      var o = t.explicitOrderBy;\n      if (s.length > o.length) throw new L(A, \"Too many arguments provided to \".concat(r, \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\"));\n      var u = [];\n\n      for (var _i4 = 0; _i4 < s.length; _i4++) {\n        var c = s[_i4];\n\n        if (o[_i4].field.isKeyField()) {\n          if (\"string\" != typeof c) throw new L(A, \"Invalid query. Expected a string for document ID in \".concat(r, \"(), but got a \").concat(typeof c));\n          if (!me(t) && -1 !== c.indexOf(\"/\")) throw new L(A, \"Invalid query. When querying a collection and ordering by documentId(), the value passed to \".concat(r, \"() must be a plain document ID, but '\").concat(c, \"' contains a slash.\"));\n\n          var _n16 = t.path.child(X.fromString(c));\n\n          if (!et.isDocumentKey(_n16)) throw new L(A, \"Invalid query. When querying a collection group and ordering by documentId(), the value passed to \".concat(r, \"() must result in a valid document path, but '\").concat(_n16, \"' is not because it contains an odd number of segments.\"));\n\n          var _s2 = new et(_n16);\n\n          u.push(Bt(e, _s2));\n        } else {\n          var _t23 = Bn(n, r, c);\n\n          u.push(_t23);\n        }\n      }\n\n      return new ce(u, i);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, s, e, n, r);\n  }\n}\n\nfunction vr(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new L(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!me(e) && -1 !== n.indexOf(\"/\")) throw new L(A, \"Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '\".concat(n, \"' contains a '/' character.\"));\n    var r = e.path.child(X.fromString(n));\n    if (!et.isDocumentKey(r)) throw new L(A, \"Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '\".concat(r, \"' is not because it has an odd number of segments (\").concat(r.length, \").\"));\n    return Bt(t, new et(r));\n  }\n\n  if (n instanceof wn) return Bt(t, n._key);\n  throw new L(A, \"Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: \".concat(it(n), \".\"));\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction br(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new L(A, \"Invalid Query. A non-empty array is required for '\".concat(e.toString(), \"' filters.\"));\n  if (t.length > 10) throw new L(A, \"Invalid Query. '\".concat(e.toString(), \"' filters support a maximum of 10 elements in the value array.\"));\n}\n\nfunction Er(t, e, n) {\n  if (!n.isEqual(e)) throw new L(A, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\".concat(e.toString(), \"' and so you must also use '\").concat(e.toString(), \"' as your first argument to orderBy(), but your first orderBy() is on field '\").concat(n.toString(), \"' instead.\"));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction Tr(t, e, n) {\n  var r; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, r;\n}\n\nvar Ir = /*#__PURE__*/function (_ref8) {\n  _inherits(Ir, _ref8);\n\n  var _super34 = _createSuper(Ir);\n\n  function Ir(t) {\n    var _this35;\n\n    _classCallCheck(this, Ir);\n\n    _this35 = _super34.call(this), _this35.firestore = t;\n    return _this35;\n  }\n\n  _createClass(Ir, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new In(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var e = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new wn(this.firestore,\n      /* converter= */\n      null, e);\n    }\n  }]);\n\n  return Ir;\n}( /*#__PURE__*/function () {\n  function _class5() {\n    _classCallCheck(this, _class5);\n  }\n\n  _createClass(_class5, [{\n    key: \"convertValue\",\n    value: function convertValue(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n      switch (Ct(t)) {\n        case 0\n        /* NullValue */\n        :\n          return null;\n\n        case 1\n        /* BooleanValue */\n        :\n          return t.booleanValue;\n\n        case 2\n        /* NumberValue */\n        :\n          return xt(t.integerValue || t.doubleValue);\n\n        case 3\n        /* TimestampValue */\n        :\n          return this.convertTimestamp(t.timestampValue);\n\n        case 4\n        /* ServerTimestampValue */\n        :\n          return this.convertServerTimestamp(t, e);\n\n        case 5\n        /* StringValue */\n        :\n          return t.stringValue;\n\n        case 6\n        /* BlobValue */\n        :\n          return this.convertBytes(Ft(t.bytesValue));\n\n        case 7\n        /* RefValue */\n        :\n          return this.convertReference(t.referenceValue);\n\n        case 8\n        /* GeoPointValue */\n        :\n          return this.convertGeoPoint(t.geoPointValue);\n\n        case 9\n        /* ArrayValue */\n        :\n          return this.convertArray(t.arrayValue, e);\n\n        case 10\n        /* ObjectValue */\n        :\n          return this.convertObject(t.mapValue, e);\n\n        default:\n          throw g();\n      }\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(t, e) {\n      var _this36 = this;\n\n      var n = {};\n      return Et(t.fields, function (t, r) {\n        n[t] = _this36.convertValue(r, e);\n      }), n;\n    }\n  }, {\n    key: \"convertGeoPoint\",\n    value: function convertGeoPoint(t) {\n      return new Rn(xt(t.latitude), xt(t.longitude));\n    }\n  }, {\n    key: \"convertArray\",\n    value: function convertArray(t, e) {\n      var _this37 = this;\n\n      return (t.values || []).map(function (t) {\n        return _this37.convertValue(t, e);\n      });\n    }\n  }, {\n    key: \"convertServerTimestamp\",\n    value: function convertServerTimestamp(t, e) {\n      switch (e) {\n        case \"previous\":\n          var n = qt(t);\n          return null == n ? null : this.convertValue(n, e);\n\n        case \"estimate\":\n          return this.convertTimestamp(Ot(t));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"convertTimestamp\",\n    value: function convertTimestamp(t) {\n      var e = $t(t);\n      return new gt(e.seconds, e.nanos);\n    }\n  }, {\n    key: \"convertDocumentKey\",\n    value: function convertDocumentKey(t, e) {\n      var n = X.fromString(t);\n      v(Xe(n));\n      var r = new H(n.get(1), n.get(3)),\n          s = new et(n.popFirst(5));\n      return r.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n      p(\"Document \".concat(s, \" contains a document reference within a different database (\").concat(r.projectId, \"/\").concat(r.database, \") which is not supported. It will be treated as a reference in the current database (\").concat(e.projectId, \"/\").concat(e.database, \") instead.\")), s;\n    }\n  }]);\n\n  return _class5;\n}());\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\n\n\nfunction Ar(t) {\n  var e = un((t = ot(t, wn)).firestore),\n      n = new Ir(t.firestore);\n  return rn(e, [t._key]).then(function (e) {\n    v(1 === e.length);\n    var r = e[0];\n    return new Zn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n  });\n}\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\n\n\nfunction Rr(t) {\n  !function (t) {\n    if (\"L\"\n    /* Last */\n    === t.limitType && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n  }((t = ot(t, mn))._query);\n  var e = un(t.firestore),\n      n = new Ir(t.firestore);\n  return sn(e, t._query).then(function (e) {\n    var r = e.map(function (e) {\n      return new tr(t.firestore, n, e.key, e, t.converter);\n    });\n    return \"L\"\n    /* Last */\n    === t._query.limitType && // Limit to last queries reverse the orderBy constraint that was\n    // specified by the user. As such, we need to reverse the order of the\n    // results to return the documents in the expected order.\n    r.reverse(), new er(t, r);\n  });\n}\n\nfunction Pr(t, e, n) {\n  var r = Tr((t = ot(t, wn)).converter, e, n),\n      s = Sn(Fn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n  return nn(un(t.firestore), [s.toMutation(t._key, Re.none())]);\n}\n\nfunction Vr(t, e, n) {\n  var s = Fn((t = ot(t, wn)).firestore); // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n\n  var i;\n\n  for (var _len13 = arguments.length, r = new Array(_len13 > 3 ? _len13 - 3 : 0), _key13 = 3; _key13 < _len13; _key13++) {\n    r[_key13 - 3] = arguments[_key13];\n  }\n\n  i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof En ? jn(s, \"updateDoc\", t._key, e, n, r) : Un(s, \"updateDoc\", t._key, e);\n  return nn(un(t.firestore), [i.toMutation(t._key, Re.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\n\n\nfunction Nr(t) {\n  return nn(un((t = ot(t, wn)).firestore), [new De(t._key, Re.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\n\n\nfunction Dr(t, e) {\n  var n = gn(t = ot(t, pn)),\n      r = Tr(t.converter, e),\n      s = Sn(Fn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n  return nn(un(t.firestore), [s.toMutation(n._key, Re.exists(!1))]).then(function () {\n    return n;\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction $r() {\n  return new qn(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction xr() {\n  return new kn(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction Fr() {\n  for (var _len14 = arguments.length, t = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n    t[_key14] = arguments[_key14];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Cn(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Sr() {\n  for (var _len15 = arguments.length, t = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n    t[_key15] = arguments[_key15];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new Ln(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction qr(t) {\n  return new Mn(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nvar Or = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Or(t, e) {\n    _classCallCheck(this, Or);\n\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = Fn(t);\n  }\n\n  _createClass(Or, [{\n    key: \"set\",\n    value: function set(t, e, n) {\n      this._verifyNotCommitted();\n\n      var r = kr(t, this._firestore),\n          s = Tr(r.converter, e, n),\n          i = Sn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n      return this._mutations.push(i.toMutation(r._key, Re.none())), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      this._verifyNotCommitted();\n\n      var s = kr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len16 = arguments.length, r = new Array(_len16 > 3 ? _len16 - 3 : 0), _key16 = 3; _key16 < _len16; _key16++) {\n        r[_key16 - 3] = arguments[_key16];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof En ? jn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Un(this._dataReader, \"WriteBatch.update\", s._key, e), this._mutations.push(i.toMutation(s._key, Re.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this._verifyNotCommitted();\n\n      var e = kr(t, this._firestore);\n      return this._mutations = this._mutations.concat(new De(e._key, Re.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n  }, {\n    key: \"_verifyNotCommitted\",\n    value: function _verifyNotCommitted() {\n      if (this._committed) throw new L(x, \"A write batch can no longer be used after commit() has been called.\");\n    }\n  }]);\n\n  return Or;\n}();\n\nfunction kr(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new L(A, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction Cr(t) {\n  var e = un(t = ot(t, an));\n  return new Or(t, function (t) {\n    return nn(e, t);\n  });\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nvar Lr = /*#__PURE__*/function () {\n  function Lr(t) {\n    _classCallCheck(this, Lr);\n\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  _createClass(Lr, [{\n    key: \"lookup\",\n    value: function () {\n      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(t) {\n        var _this38 = this;\n\n        var e;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new L(A, \"Firestore transactions require all reads to be executed before all writes.\");\n\n              case 2:\n                _context2.next = 4;\n                return rn(this.datastore, t);\n\n              case 4:\n                e = _context2.sent;\n                return _context2.abrupt(\"return\", (e.forEach(function (t) {\n                  return _this38.recordVersion(t);\n                }), e));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function lookup(_x11) {\n        return _lookup.apply(this, arguments);\n      }\n\n      return lookup;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e) {\n      try {\n        this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n      } catch (t) {\n        this.lastWriteError = t;\n      }\n\n      this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this.write(new De(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this39 = this;\n\n        var t;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw this.lastWriteError;\n\n              case 2:\n                t = this.readVersions; // For each mutation, note that the doc was written.\n\n                this.mutations.forEach(function (e) {\n                  t.delete(e.key.toString());\n                });\n                // For each document that was read but not written to, we want to perform\n                // a `verify` operation.\n                t.forEach(function (t, e) {\n                  var n = et.fromPath(e);\n\n                  _this39.mutations.push(new $e(n, _this39.precondition(n)));\n                });\n                _context3.next = 7;\n                return nn(this.datastore, this.mutations);\n\n              case 7:\n                this.committed = !0;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function commit() {\n        return _commit.apply(this, arguments);\n      }\n\n      return commit;\n    }()\n  }, {\n    key: \"recordVersion\",\n    value: function recordVersion(t) {\n      var e;\n      if (t.isFoundDocument()) e = t.version;else {\n        if (!t.isNoDocument()) throw g(); // For deleted docs, we must use baseVersion 0 when we overwrite them.\n\n        e = vt.min();\n      }\n      var n = this.readVersions.get(t.key.toString());\n\n      if (n) {\n        if (!e.isEqual(n)) // This transaction will fail no matter what.\n          throw new L(F, \"Document version changed between two reads.\");\n      } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n\n  }, {\n    key: \"precondition\",\n    value: function precondition(t) {\n      var e = this.readVersions.get(t.toString());\n      return !this.writtenDocs.has(t.toString()) && e ? Re.updateTime(e) : Re.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n\n  }, {\n    key: \"preconditionForUpdate\",\n    value: function preconditionForUpdate(t) {\n      var e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n      // read time and existence\n\n      if (!this.writtenDocs.has(t.toString()) && e) {\n        if (e.isEqual(vt.min())) // The document doesn't exist, so fail the transaction.\n          // This has to be validated locally because you can't send a\n          // precondition that a document does not exist without changing the\n          // semantics of the backend write to be an insert. This is the reverse\n          // of what we want, since we want to assert that the document doesn't\n          // exist but then send the update and have it fail. Since we can't\n          // express that to the backend, we have to validate locally.\n          // Note: this can change once we can send separate verify writes in the\n          // transaction.\n          throw new L(A, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n        return Re.updateTime(e);\n      } // Document was not read, so we just use the preconditions for a blind\n      // update.\n\n\n      return Re.exists(!0);\n    }\n  }, {\n    key: \"write\",\n    value: function write(t) {\n      this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n  }, {\n    key: \"ensureCommitNotCalled\",\n    value: function ensureCommitNotCalled() {}\n  }]);\n\n  return Lr;\n}();\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Mr = {\n  maxAttempts: 5\n};\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\nvar Ur = /*#__PURE__*/function () {\n  function Ur(t, e, n, r, s) {\n    _classCallCheck(this, Ur);\n\n    this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, this.deferred = s, this.Tt = n.maxAttempts, this.It = new tn(this.asyncQueue, \"transaction_retry\"\n    /* TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  _createClass(Ur, [{\n    key: \"run\",\n    value: function run() {\n      this.Tt -= 1, this.At();\n    }\n  }, {\n    key: \"At\",\n    value: function At() {\n      var _this40 = this;\n\n      this.It.W( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var t, e;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                t = new Lr(_this40.datastore), e = _this40.Rt(t);\n                e && e.then(function (e) {\n                  _this40.asyncQueue.enqueueAndForget(function () {\n                    return t.commit().then(function () {\n                      _this40.deferred.resolve(e);\n                    }).catch(function (t) {\n                      _this40.Pt(t);\n                    });\n                  });\n                }).catch(function (t) {\n                  _this40.Pt(t);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })));\n    }\n  }, {\n    key: \"Rt\",\n    value: function Rt(t) {\n      try {\n        var e = this.updateFunction(t);\n        return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n      } catch (t) {\n        // Do not retry errors thrown by user provided updateFunction.\n        return this.deferred.reject(t), null;\n      }\n    }\n  }, {\n    key: \"Pt\",\n    value: function Pt(t) {\n      var _this41 = this;\n\n      this.Tt > 0 && this.Vt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget(function () {\n        return _this41.At(), Promise.resolve();\n      })) : this.deferred.reject(t);\n    }\n  }, {\n    key: \"Vt\",\n    value: function Vt(t) {\n      if (\"FirebaseError\" === t.name) {\n        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n        // non-matching document versions with ABORTED. These errors should be retried.\n        var e = t.code;\n        return \"aborted\" === e || \"failed-precondition\" === e || !\n        /**\n        * Determines whether an error code represents a permanent error when received\n        * in response to a non-write operation.\n        *\n        * See isPermanentWriteError for classifying write errors.\n        */\n        function (t) {\n          switch (t) {\n            default:\n              return g();\n\n            case T:\n            case I:\n            case R:\n            case $:\n            case O:\n            case k: // Unauthenticated means something went wrong with our token and we need\n            // to retry with new credentials which will happen automatically.\n\n            case D:\n              return !1;\n\n            case A:\n            case P:\n            case V:\n            case N:\n            case x: // Aborted might be retried in some scenarios, but that is dependant on\n            // the context and should handled individually by the calling code.\n            // See https://cloud.google.com/apis/design/errors.\n\n            case F:\n            case S:\n            case q:\n            case C:\n              return !0;\n          }\n        }(e);\n      }\n\n      return !1;\n    }\n  }]);\n\n  return Ur;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction jr() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nvar Br = /*#__PURE__*/function () {\n  function Br(t, e, n, r, s) {\n    _classCallCheck(this, Br);\n\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, this.deferred = new M(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(function (t) {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  _createClass(Br, [{\n    key: \"start\",\n    value:\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    function start(t) {\n      var _this42 = this;\n\n      this.timerHandle = setTimeout(function () {\n        return _this42.handleDelayElapsed();\n      }, t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n\n  }, {\n    key: \"skipDelay\",\n    value: function skipDelay() {\n      return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(t) {\n      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n  }, {\n    key: \"handleDelayElapsed\",\n    value: function handleDelayElapsed() {\n      var _this43 = this;\n\n      this.asyncQueue.enqueueAndForget(function () {\n        return null !== _this43.timerHandle ? (_this43.clearTimeout(), _this43.op().then(function (t) {\n          return _this43.deferred.resolve(t);\n        })) : Promise.resolve();\n      });\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n    })\n  }], [{\n    key: \"createAndSchedule\",\n    value: function createAndSchedule(t, e, n, r, s) {\n      var i = Date.now() + n,\n          o = new Br(t, e, i, r, s);\n      return o.start(n), o;\n    }\n  }]);\n\n  return Br;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar zr = /*#__PURE__*/function () {\n  function zr() {\n    var _this44 = this;\n\n    _classCallCheck(this, zr);\n\n    // The last promise in the queue.\n    this.Nt = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.Dt = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.$t = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.xt = [], // visible for testing\n    this.Ft = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.St = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.qt = !1, // List of TimerIds to fast-forward delays for.\n    this.Ot = [], // Backoff timer used to schedule retries for retryable operations\n    this.It = new tn(this, \"async_queue_retry\"\n    /* AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.kt = function () {\n      var t = jr();\n      t && _m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), _this44.It.Y();\n    };\n    var t = jr();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.kt);\n  }\n\n  _createClass(zr, [{\n    key: \"isShuttingDown\",\n    get: function get() {\n      return this.$t;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n\n  }, {\n    key: \"enqueueAndForget\",\n    value: function enqueueAndForget(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.enqueue(t);\n    }\n  }, {\n    key: \"enqueueAndForgetEvenWhileRestricted\",\n    value: function enqueueAndForgetEvenWhileRestricted(t) {\n      this.Ct(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.Lt(t);\n    }\n  }, {\n    key: \"enterRestrictedMode\",\n    value: function enterRestrictedMode(t) {\n      if (!this.$t) {\n        this.$t = !0, this.qt = t || !1;\n        var e = jr();\n        e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.kt);\n      }\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(t) {\n      var _this45 = this;\n\n      if (this.Ct(), this.$t) // Return a Promise which never resolves.\n        return new Promise(function () {}); // Create a deferred Promise that we can return to the callee. This\n      // allows us to return a \"hanging Promise\" only to the callee and still\n      // advance the queue even when the operation is not run.\n\n      var e = new M();\n      return this.Lt(function () {\n        return _this45.$t && _this45.qt ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise);\n      }).then(function () {\n        return e.promise;\n      });\n    }\n  }, {\n    key: \"enqueueRetryable\",\n    value: function enqueueRetryable(t) {\n      var _this46 = this;\n\n      this.enqueueAndForget(function () {\n        return _this46.Dt.push(t), _this46.Mt();\n      });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n\n  }, {\n    key: \"Mt\",\n    value: function () {\n      var _Mt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this47 = this;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(0 !== this.Dt.length)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.prev = 1;\n                _context5.next = 4;\n                return this.Dt[0]();\n\n              case 4:\n                this.Dt.shift();\n                this.It.reset();\n                _context5.next = 13;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                if (\n                /**\n                * @license\n                * Copyright 2017 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function (t) {\n                  // Use name equality, as instanceof checks on errors don't work with errors\n                  // that wrap other errors.\n                  return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n                * @license\n                * Copyright 2020 Google LLC\n                *\n                * Licensed under the Apache License, Version 2.0 (the \"License\");\n                * you may not use this file except in compliance with the License.\n                * You may obtain a copy of the License at\n                *\n                *   http://www.apache.org/licenses/LICENSE-2.0\n                *\n                * Unless required by applicable law or agreed to in writing, software\n                * distributed under the License is distributed on an \"AS IS\" BASIS,\n                * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                * See the License for the specific language governing permissions and\n                * limitations under the License.\n                */\n                (_context5.t0)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw _context5.t0;\n\n              case 12:\n                // Failure will be handled by AsyncQueue\n                _m(\"AsyncQueue\", \"Operation failed with retryable error: \" + _context5.t0);\n\n              case 13:\n                this.Dt.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n                // This is necessary to run retryable operations that failed during\n                // their initial attempt since we don't know whether they are already\n                // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n                // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n                // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n                // call scheduled here.\n                // Since `backoffAndRun()` cancels an existing backoff and schedules a\n                // new backoff on every call, there is only ever a single additional\n                // operation in the queue.\n                this.It.W(function () {\n                  return _this47.Mt();\n                });\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 8]]);\n      }));\n\n      function Mt() {\n        return _Mt.apply(this, arguments);\n      }\n\n      return Mt;\n    }()\n  }, {\n    key: \"Lt\",\n    value: function Lt(t) {\n      var _this48 = this;\n\n      var e = this.Nt.then(function () {\n        return _this48.St = !0, t().catch(function (t) {\n          _this48.Ft = t, _this48.St = !1;\n\n          var e =\n          /**\n          * Chrome includes Error.message in Error.stack. Other browsers do not.\n          * This returns expected output of message + stack when available.\n          * @param error - Error or FirestoreError\n          */\n          function (t) {\n            var e = t.message || \"\";\n            t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n            return e;\n          }\n          /**\n          * @license\n          * Copyright 2020 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n          // legacy SDK.\n\n          /**\n          * A reference to a transaction.\n          *\n          * The `Transaction` object passed to a transaction's `updateFunction` provides\n          * the methods to read and write data within the transaction context. See\n          * {@link runTransaction}.\n          */\n          (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n\n\n          throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        }).then(function (t) {\n          return _this48.St = !1, t;\n        });\n      });\n      return this.Nt = e, e;\n    }\n  }, {\n    key: \"enqueueAfterDelay\",\n    value: function enqueueAfterDelay(t, e, n) {\n      var _this49 = this;\n\n      this.Ct(), // Fast-forward delays for timerIds that have been overriden.\n      this.Ot.indexOf(t) > -1 && (e = 0);\n      var r = Br.createAndSchedule(this, t, e, n, function (t) {\n        return _this49.Ut(t);\n      });\n      return this.xt.push(r), r;\n    }\n  }, {\n    key: \"Ct\",\n    value: function Ct() {\n      this.Ft && g();\n    }\n  }, {\n    key: \"verifyOperationInProgress\",\n    value: function verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n\n  }, {\n    key: \"jt\",\n    value: function () {\n      var _jt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var t;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                t = this.Nt;\n                _context6.next = 3;\n                return t;\n\n              case 3:\n                if (t !== this.Nt) {\n                  _context6.next = 0;\n                  break;\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function jt() {\n        return _jt.apply(this, arguments);\n      }\n\n      return jt;\n    }()\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n\n  }, {\n    key: \"Bt\",\n    value: function Bt(t) {\n      var _iterator13 = _createForOfIteratorHelper(this.xt),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var e = _step13.value;\n          if (e.timerId === t) return !0;\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n\n      return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n\n  }, {\n    key: \"zt\",\n    value: function zt(t) {\n      var _this50 = this;\n\n      // Note that draining may generate more delayed ops, so we do that first.\n      return this.jt().then(function () {\n        // Run ops in the same order they'd run if they ran naturally.\n        _this50.xt.sort(function (t, e) {\n          return t.targetTimeMs - e.targetTimeMs;\n        });\n\n        var _iterator14 = _createForOfIteratorHelper(_this50.xt),\n            _step14;\n\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var e = _step14.value;\n            if (e.skipDelay(), \"all\"\n            /* All */\n            !== t && e.timerId === t) break;\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n\n        return _this50.jt();\n      });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n\n  }, {\n    key: \"Gt\",\n    value: function Gt(t) {\n      this.Ot.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n\n  }, {\n    key: \"Ut\",\n    value: function Ut(t) {\n      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n      var e = this.xt.indexOf(t);\n      this.xt.splice(e, 1);\n    }\n  }]);\n\n  return zr;\n}();\n\nvar Gr = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Gr(t, e) {\n    _classCallCheck(this, Gr);\n\n    this._firestore = t, this._transaction = e, this._dataReader = Fn(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  _createClass(Gr, [{\n    key: \"get\",\n    value: function get(t) {\n      var _this51 = this;\n\n      var e = kr(t, this._firestore),\n          n = new Ir(this._firestore);\n      return this._transaction.lookup([e._key]).then(function (t) {\n        if (!t || 1 !== t.length) return g();\n        var r = t[0];\n        if (r.isFoundDocument()) return new Zn(_this51._firestore, n, r.key, r, e.converter);\n        if (r.isNoDocument()) return new Zn(_this51._firestore, n, e._key, null, e.converter);\n        throw g();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(t, e, n) {\n      var r = kr(t, this._firestore),\n          s = Tr(r.converter, e, n),\n          i = Sn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n      return this._transaction.set(r._key, i), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      var s = kr(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var i;\n\n      for (var _len17 = arguments.length, r = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {\n        r[_key17 - 3] = arguments[_key17];\n      }\n\n      return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof En ? jn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Un(this._dataReader, \"Transaction.update\", s._key, e), this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = kr(t, this._firestore);\n      return this._transaction.delete(e._key), this;\n    }\n  }]);\n\n  return Gr;\n}();\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction Wr(t, e, n) {\n  var r = un(t = ot(t, an)),\n      s = Object.assign(Object.assign({}, Mr), n);\n  !function (t) {\n    if (t.maxAttempts < 1) throw new L(A, \"Max attempts must be at least 1\");\n  }(s);\n  var i = new M();\n  return new Ur(new zr(), r, s, function (n) {\n    return e(new Gr(t, n));\n  }, i).run(), i.promise;\n}\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */\n\n\n!function (t) {\n  f = t;\n}(\"\".concat(SDK_VERSION, \"_lite\")), _registerComponent(new Component(\"firestore/lite\", function (t, _ref10) {\n  var e = _ref10.options;\n  var n = t.getProvider(\"app\").getImmediate(),\n      r = new an(n, new z(t.getProvider(\"auth-internal\")), new Q(t.getProvider(\"app-check-internal\")));\n  return e && r._setSettings(e), r;\n}, \"PUBLIC\")), // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.4.13\", \"\"), registerVersion(\"firestore-lite\", \"3.4.13\", \"esm2017\");\nexport { In as Bytes, pn as CollectionReference, wn as DocumentReference, Zn as DocumentSnapshot, En as FieldPath, An as FieldValue, an as Firestore, L as FirestoreError, Rn as GeoPoint, mn as Query, sr as QueryConstraint, tr as QueryDocumentSnapshot, er as QuerySnapshot, gt as Timestamp, Gr as Transaction, Or as WriteBatch, Dr as addDoc, Sr as arrayRemove, Fr as arrayUnion, yn as collection, _n as collectionGroup, fn as connectFirestoreEmulator, Nr as deleteDoc, $r as deleteField, gn as doc, Tn as documentId, _r as endAt, yr as endBefore, Ar as getDoc, Rr as getDocs, ln as getFirestore, qr as increment, hn as initializeFirestore, lr as limit, fr as limitToLast, ar as orderBy, ir as query, bn as queryEqual, vn as refEqual, Wr as runTransaction, xr as serverTimestamp, Pr as setDoc, w as setLogLevel, nr as snapshotEqual, mr as startAfter, wr as startAt, dn as terminate, Vr as updateDoc, ur as where, Cr as writeBatch };","map":{"version":3,"mappings":"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","names":["l","t","uid","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","f","d","o","w","setLogLevel","m","logLevel","u","DEBUG","e","n","map","_","debug","p","ERROR","error","y","WARN","warn","JSON","stringify","g","Error","v","b","E","T","I","A","R","P","V","N","D","$","x","F","S","q","O","k","C","L","code","message","toString","name","c","M","promise","Promise","resolve","reject","U","user","type","headers","Map","set","j","enqueueRetryable","B","token","changeListener","z","auth","onInit","getToken","then","accessToken","getUid","G","r","getAuthHeaderValueForFirstParty","W","i","K","value","length","Q","appCheck","Y","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","H","projectId","database","J","segments","offset","len","comparator","slice","limit","forEach","push","construct","get","Math","min","X","toArray","join","canonicalString","indexOf","split","filter","Z","tt","replace","isValidIdentifier","test","et","path","popLast","lastSegment","fromString","popFirst","emptyPath","nt","rt","isDocumentKey","st","it","substring","Array","constructor","ot","_delegate","ut","ct","at","ht","BatchGetDocuments","Commit","RunQuery","lt","ft","dt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","wt","method","body","status","statusText","ok","json","databaseInfo","h","mt","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","pt","charAt","yt","_t","every","gt","seconds","nanoseconds","Date","toMillis","String","padStart","fromMillis","now","getTime","vt","timestamp","_compareTo","isEqual","bt","Object","prototype","hasOwnProperty","call","Et","Tt","root","At","EMPTY","insert","copy","BLACK","remove","isEmpty","key","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","It","isReverse","nodeStack","pop","color","RED","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","pow","Rt","data","getIteratorFrom","hasNext","getNext","getIterator","Pt","has","add","iter","Vt","fields","sort","isPrefixOf","Nt","binaryString","next","charCodeAt","done","btoa","atob","fromCharCode","Symbol","iterator","EMPTY_BYTE_STRING","Dt","RegExp","$t","exec","substr","Number","nanos","xt","Ft","fromBase64String","fromUint8Array","St","mapValue","__type__","stringValue","qt","__previous_value__","Ot","__local_write_time__","timestampValue","kt","Ct","Lt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","Mt","find","Ut","jt","compareTo","keys","Bt","zt","Gt","Wt","Kt","Qt","assign","Yt","getFieldsMap","isImmediateParentOf","applyChanges","field","Ht","documentType","version","readTime","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","Jt","collectionGroup","orderBy","filters","startAt","endAt","Xt","Zt","op","isKeyField","te","se","ie","oe","ue","ee","ne","fromName","re","some","nullValue","ce","position","inclusive","ae","dir","he","le","fe","explicitOrderBy","limitType","de","we","me","pe","keyField","ye","_e","ge","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","ve","be","Ee","elements","Te","Ie","Ae","transform","Re","updateTime","exists","Pe","Ve","precondition","fieldTransforms","Ne","fieldMask","De","$e","xe","asc","desc","Fe","in","Se","qe","toISOString","Oe","toBase64","toUint8Array","ke","toTimestamp","Ce","fromTimestamp","Le","child","Me","Ue","Xe","je","Be","ze","Ge","found","newFoundDocument","missing","newNoDocument","We","update","delete","updateMask","Je","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","Ke","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","He","fieldFilter","Ye","compositeFilter","where","direction","Qe","before","fieldPaths","Ze","tn","timerId","reset","cancel","max","enqueueAfterDelay","skipDelay","en","authCredentials","appCheckCredentials","all","catch","invalidateToken","nn","writes","rn","documents","sn","document","setHasCommittedMutations","on","un","_terminated","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","cn","credentials","ignoreUndefinedProperties","cacheSizeBytes","an","_settings","_settingsFrozen","_app","apply","_terminateTask","client","sessionIndex","iamToken","_terminate","settings","terminate","hn","_getProvider","isInitialized","initialize","ln","getImmediate","fn","_getSettings","_setSettings","mockUserToken","a","sub","user_id","dn","_delete","wn","converter","_key","firestore","pn","mn","_query","_path","yn","_n","gn","arguments","vn","bn","En","_internalPath","Tn","In","_byteString","An","_methodName","Rn","isFinite","_lat","_long","Pn","Vn","Nn","Dn","$n","Jn","methodName","xn","Fn","Sn","merge","mergeFields","Kn","Gn","Qn","contains","Xn","covers","qn","On","kn","Cn","zn","Ln","Mn","Un","Hn","jn","Bn","Wn","_toFieldTransform","fromDate","getPrototypeOf","Yn","search","Zn","_firestore","_userDataWriter","_document","_converter","tr","fromFirestore","convertValue","rr","er","_docs","query","docs","nr","sr","ir","_apply","or","br","vr","create","Er","concat","ur","cr","ar","hr","lr","fr","dr","gr","wr","mr","pr","yr","_r","isArray","Tr","toFirestore","Ir","convertDocumentKey","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","Ar","isFoundDocument","Rr","reverse","Pr","toMutation","none","Vr","Nr","Dr","$r","xr","Fr","Sr","qr","Or","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","kr","Cr","Lr","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","fromPath","isNoDocument","Mr","maxAttempts","Ur","asyncQueue","updateFunction","deferred","enqueueAndForget","commit","jr","Br","targetTimeMs","removalCallback","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","start","zr","visibilityState","addEventListener","enqueue","removeEventListener","shift","stack","includes","createAndSchedule","splice","Gr","_transaction","lookup","Wr","run","getProvider"],"sources":["G:\\react-deploy\\node_modules\\@firebase\\firestore\\dist\\lite\\index.browser.esm2017.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, createMockUserToken as a, getModularInstance as h } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.9.1\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...e) {\n    if (d.logLevel <= u.DEBUG) {\n        const n = e.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\nfunction p(t, ...e) {\n    if (d.logLevel <= u.ERROR) {\n        const n = e.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...e) {\n    if (d.logLevel <= u.WARN) {\n        const n = e.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function v(t, e) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", T = \"cancelled\", I = \"unknown\", A = \"invalid-argument\", R = \"deadline-exceeded\", P = \"not-found\", V = \"already-exists\", N = \"permission-denied\", D = \"unauthenticated\", $ = \"resource-exhausted\", x = \"failed-precondition\", F = \"aborted\", S = \"out-of-range\", q = \"unimplemented\", O = \"internal\", k = \"unavailable\", C = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class L extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class M {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class U {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class j {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class z {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (v(\"string\" == typeof t.accessToken), \n        new U(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n) {\n        this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.headers = new Map, this.headers.set(\"X-Goog-AuthUser\", e);\n        const r = t.auth.getAuthHeaderValueForFirstParty([]);\n        r && this.headers.set(\"Authorization\", r), n && this.headers.set(\"X-Goog-Iam-Authorization-Token\", n);\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class W {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass K {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class Q {\n    constructor(t) {\n        this.u = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (v(\"string\" == typeof t.token), \n        new K(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Y {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass H {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new H(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof H && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass J {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === J.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof J ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class X extends J {\n    construct(t, e, n) {\n        return new X(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new L(A, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new X(e);\n    }\n    static emptyPath() {\n        return new X([]);\n    }\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class tt extends J {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return Z.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new tt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new L(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new L(A, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new L(A, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new L(A, \"Unterminated ` in path: \" + t);\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class et {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new et(X.fromString(t));\n    }\n    static fromName(t) {\n        return new et(X.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new et(X.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return X.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new et(new X(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function nt(t, e, n) {\n    if (!n) throw new L(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction rt(t) {\n    if (!et.isDocumentKey(t)) throw new L(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function st(t) {\n    if (et.isDocumentKey(t)) throw new L(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction it(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new L(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = it(t);\n            throw new L(A, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ut(t, e) {\n    if (e <= 0) throw new L(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ct(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function at(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ht = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar lt, ft;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction dt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return x;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return D;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return S;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return I;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return k;\n\n      case 504:\n        // Gateway Timeout\n        return R;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? x : t >= 500 && t < 600 ? O : I;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", \nft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", \nft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", \nft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.h = e + \"://\" + t.host, this.l = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    m(t, e, n, r, s) {\n        const i = this.p(t, e);\n        m(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.g(o, r, s), this.v(t, i, o, n).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    T(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.m(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    g(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    p(t, e) {\n        const n = ht[t];\n        return `${this.h}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.I = e;\n    }\n    A(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async v(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.I(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new L(dt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new L(dt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction mt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class pt {\n    static R() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = mt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction yt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function _t(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass gt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new gt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class vt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new vt(t);\n    }\n    static min() {\n        return new vt(new gt(0, 0));\n    }\n    static max() {\n        return new vt(new gt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass Tt {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || At.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new Tt(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new Tt(this.comparator, this.root.remove(t, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new It(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new It(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass It {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass At {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : At.RED, this.left = null != r ? r : At.EMPTY, \n        this.right = null != s ? s : At.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new At(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return At.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return At.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, At.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, At.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw g();\n        if (this.right.isRed()) throw g();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw g();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nAt.EMPTY = null, At.RED = !0, At.BLACK = !1;\n\n// end LLRBEmptyNode\nAt.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw g();\n    }\n    get value() {\n        throw g();\n    }\n    get color() {\n        throw g();\n    }\n    get left() {\n        throw g();\n    }\n    get right() {\n        throw g();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new At(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Rt {\n    constructor(t) {\n        this.comparator = t, this.data = new Tt(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Pt(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Pt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Rt)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Rt(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Pt {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class Vt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(tt.comparator);\n    }\n    static empty() {\n        return new Vt([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Rt(tt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new Vt(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return _t(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Nt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new Nt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Nt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return yt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nNt.EMPTY_BYTE_STRING = new Nt(\"\");\n\nconst Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function $t(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (v(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Dt.exec(t);\n        if (v(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: xt(t.seconds),\n        nanos: xt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function xt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Ft(t) {\n    return \"string\" == typeof t ? Nt.fromBase64String(t) : Nt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function St(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function qt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return St(e) ? qt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ot(t) {\n    const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new gt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const kt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Ct(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? St(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Lt(t, e) {\n    if (t === e) return !0;\n    const n = Ct(t);\n    if (n !== Ct(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Ot(t).isEqual(Ot(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = $t(t.timestampValue), r = $t(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return xt(t.geoPointValue.latitude) === xt(e.geoPointValue.latitude) && xt(t.geoPointValue.longitude) === xt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return xt(t.integerValue) === xt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = xt(t.doubleValue), r = xt(e.doubleValue);\n                return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return _t(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Lt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return g();\n    }\n}\n\nfunction Mt(t, e) {\n    return void 0 !== (t.values || []).find((t => Lt(t, e)));\n}\n\nfunction Ut(t, e) {\n    if (t === e) return 0;\n    const n = Ct(t), r = Ct(e);\n    if (n !== r) return yt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return yt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = xt(t.integerValue || t.doubleValue), r = xt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return jt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return jt(Ot(t), Ot(e));\n\n      case 5 /* StringValue */ :\n        return yt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = Ft(t), r = Ft(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = yt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = yt(xt(t.latitude), xt(e.latitude));\n            if (0 !== n) return n;\n            return yt(xt(t.longitude), xt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ut(n[t], r[t]);\n                if (e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === kt && e === kt) return 0;\n            if (t === kt) return 1;\n            if (e === kt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = yt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ut(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return yt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction jt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n    const n = $t(t), r = $t(e), s = yt(n.seconds, r.seconds);\n    return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function zt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Gt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Wt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Kt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Qt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Qt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Qt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Yt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Yt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Kt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Qt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = tt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Qt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Lt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Kt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Yt(Qt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Ht {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Ht(t, 0 /* INVALID */ , vt.min(), vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Ht(t, 1 /* FOUND_DOCUMENT */ , e, vt.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Ht(t, 2 /* NO_DOCUMENT */ , e, vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Ht(t, 3 /* UNKNOWN_DOCUMENT */ , e, vt.min(), Yt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this.version = vt.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Ht && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new Ht(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Jt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.P = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Xt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Jt(t, e, n, r, s, i, o);\n}\n\nclass Zt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.V(t, e, n) : new te(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new se(t, n) : \"in\" /* IN */ === e ? new ie(t, n) : \"not-in\" /* NOT_IN */ === e ? new oe(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n    static V(t, e, n) {\n        return \"in\" /* IN */ === e ? new ee(t, n) : new ne(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.N(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.N(Ut(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    N(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    D() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass te extends Zt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = et.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = et.comparator(t.key, this.key);\n        return this.N(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ee extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = re(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class ne extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = re(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction re(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => et.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class se extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return zt(e) && Mt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ie extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class oe extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Mt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ue extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!zt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Mt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class ce {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ae {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction he(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction le(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Lt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class fe {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.$ = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.F = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function de(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction we(t) {\n    for (const e of t.filters) if (e.D()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction me(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function pe(t) {\n    const e = b(t);\n    if (null === e.$) {\n        e.$ = [];\n        const t = we(e), n = de(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.$.push(new ae(t)), e.$.push(new ae(tt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.$.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.$.push(new ae(tt.keyField(), t));\n            }\n        }\n    }\n    return e.$;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ye(t) {\n    const e = b(t);\n    if (!e.F) if (\"F\" /* First */ === e.limitType) e.F = Xt(e.path, e.collectionGroup, pe(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of pe(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new ae(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new ce(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new ce(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.F = Xt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.F;\n}\n\nfunction _e(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Lt(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!le(t.startAt, e.startAt) && le(t.endAt, e.endAt);\n    }(ye(t), ye(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction ge(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.S) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: at(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class ve {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class be extends ve {}\n\n/** Transforms an array value via a union operation. */ class Ee extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Te extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ie extends ve {\n    constructor(t, e) {\n        super(), this.q = t, this.O = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Ae {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Re {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Re;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Re(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Re(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Pe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Ve extends Pe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ne extends Pe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class De extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class $e extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const xe = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Fe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Se {\n    constructor(t, e) {\n        this.databaseId = t, this.S = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction qe(t, e) {\n    if (t.S) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Oe(t, e) {\n    return t.S ? e.toBase64() : e.toUint8Array();\n}\n\nfunction ke(t, e) {\n    return qe(t, e.toTimestamp());\n}\n\nfunction Ce(t) {\n    return v(!!t), vt.fromTimestamp(function(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Le(t, e) {\n    return function(t) {\n        return new X([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Me(t, e) {\n    return Le(t.databaseId, e.path);\n}\n\nfunction Ue(t, e) {\n    const n = function(t) {\n        const e = X.fromString(t);\n        return v(Xe(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new L(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new L(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction je(t, e) {\n    return Le(t.databaseId, e);\n}\n\nfunction Be(t) {\n    return new X([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction ze(t, e, n) {\n    return {\n        name: Me(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Ge(t, e) {\n    return \"found\" in e ? function(t, e) {\n        v(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ue(t, e.found.name), r = Ce(e.found.updateTime), s = new Yt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Ht.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        v(!!e.missing), v(!!e.readTime);\n        const n = Ue(t, e.missing), r = Ce(e.readTime);\n        return Ht.newNoDocument(n, r);\n    }(t, e) : g();\n}\n\nfunction We(t, e) {\n    let n;\n    if (e instanceof Ve) n = {\n        update: ze(t, e.key, e.value)\n    }; else if (e instanceof De) n = {\n        delete: Me(t, e.key)\n    }; else if (e instanceof Ne) n = {\n        update: ze(t, e.key, e.data),\n        updateMask: Je(e.fieldMask)\n    }; else {\n        if (!(e instanceof $e)) return g();\n        n = {\n            verify: Me(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof be) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ee) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Te) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ie) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.O\n        };\n        throw g();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: ke(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : g();\n    }(t, e.precondition)), n;\n}\n\nfunction Ke(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = je(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = je(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: He(t.field),\n                    op: Ye(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: He(t.field),\n                direction: Qe(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.S || ct(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction Qe(t) {\n    return xe[t];\n}\n\n// visible for testing\nfunction Ye(t) {\n    return Fe[t];\n}\n\nfunction He(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Je(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction Xe(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ze(t) {\n    return new Se(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass tn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.k = t, this.timerId = e, this.C = n, this.L = r, this.M = s, this.U = 0, this.j = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.B = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.U = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    G() {\n        this.U = this.M;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    W(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.U + this.K()), n = Math.max(0, Date.now() - this.B), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.U} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.j = this.k.enqueueAfterDelay(this.timerId, r, (() => (this.B = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.U *= this.L, this.U < this.C && (this.U = this.C), this.U > this.M && (this.U = this.M);\n    }\n    Y() {\n        null !== this.j && (this.j.skipDelay(), this.j = null);\n    }\n    cancel() {\n        null !== this.j && (this.j.cancel(), this.j = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    K() {\n        return (Math.random() - .5) * this.U;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass en extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.H = n, this.q = r, \n        this.J = !1;\n    }\n    X() {\n        if (this.J) throw new L(x, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    m(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.H.m(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    T(t, e, n, r) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.H.T(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    terminate() {\n        this.J = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function nn(t, e) {\n    const n = b(t), r = Be(n.q) + \"/documents\", s = {\n        writes: e.map((t => We(n.q, t)))\n    };\n    await n.m(\"Commit\", r, s);\n}\n\nasync function rn(t, e) {\n    const n = b(t), r = Be(n.q) + \"/documents\", s = {\n        documents: e.map((t => Me(n.q, t)))\n    }, i = await n.T(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Ge(n.q, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        v(!!e), u.push(e);\n    })), u;\n}\n\nasync function sn(t, e) {\n    const n = b(t), r = Ke(n.q, ye(e));\n    return (await n.T(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ue(t, e.name), s = Ce(e.updateTime), i = new Yt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = Ht.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.q, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const on = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction un(t) {\n    if (t._terminated) throw new L(x, \"The client has already been terminated.\");\n    if (!on.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new wt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Y(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Ze(t._databaseId), u = function(t, e, n, r) {\n            return new en(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        on.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return on.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass cn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new L(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new L(A, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class an {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._authCredentials = e, this._appCheckCredentials = n, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new cn({}), \n        this._settingsFrozen = !1, t instanceof H ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new L(A, '\"projectId\" not provided in firebase.initializeApp.');\n            return new H(t.options.projectId);\n        }\n        /**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new L(x, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new L(x, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new cn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new j;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                // Make sure this really is a Gapi client.\n                                return v(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), \n                new W(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new L(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = on.get(t);\n            e && (m(\"ComponentProvider\", \"Removing Datastore\"), on.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction hn(t, e) {\n    const n = _getProvider(t, \"firestore/lite\");\n    if (n.isInitialized()) throw new L(x, \"Firestore can only be initialized once per app.\");\n    return n.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */ function ln(e = t()) {\n    return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function fn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ot(t, an))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = a(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new L(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new l(i);\n        }\n        t._authCredentials = new B(new U(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function dn(t) {\n    return t = ot(t, an), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass wn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new pn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new wn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class mn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new mn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class pn extends mn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new fe(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new wn(this.firestore, \n        /* converter= */ null, new et(t));\n    }\n    withConverter(t) {\n        return new pn(this.firestore, t, this._path);\n    }\n}\n\nfunction yn(t, e, ...n) {\n    if (t = h(t), nt(\"collection\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return st(r), new pn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return st(r), new pn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function _n(t, e) {\n    if (t = ot(t, an), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new mn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new fe(X.emptyPath(), t);\n    }(e));\n}\n\nfunction gn(t, e, ...n) {\n    if (t = h(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = pt.R()), nt(\"doc\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return rt(r), new wn(t, \n        /* converter= */ null, new et(r));\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return rt(r), new wn(t.firestore, t instanceof pn ? t.converter : null, new et(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function vn(t, e) {\n    return t = h(t), e = h(e), (t instanceof wn || t instanceof pn) && (e instanceof wn || e instanceof pn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function bn(t, e) {\n    return t = h(t), e = h(e), t instanceof mn && e instanceof mn && (t.firestore === e.firestore && _e(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class En {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new L(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new tt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Tn() {\n    return new En(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class In {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new In(Nt.fromBase64String(t));\n        } catch (t) {\n            throw new L(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new In(Nt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class An {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Rn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new L(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new L(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Pn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Vn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ve(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Nn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Dn(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class $n {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.q = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get tt() {\n        return this.settings.tt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    et(t) {\n        return new $n(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.q, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    nt(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.et({\n            path: n,\n            rt: !1\n        });\n        return r.st(t), r;\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.et({\n            path: n,\n            rt: !1\n        });\n        return r.Z(), r;\n    }\n    ot(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.et({\n            path: void 0,\n            rt: !0\n        });\n    }\n    ut(t) {\n        return Jn(t, this.settings.methodName, this.settings.ct || !1, this.path, this.settings.at);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    Z() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.st(this.path.get(t));\n    }\n    st(t) {\n        if (0 === t.length) throw this.ut(\"Document fields must not be empty\");\n        if (Dn(this.tt) && Pn.test(t)) throw this.ut('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class xn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.q = n || Ze(t);\n    }\n    /** Creates a new top-level parse context. */    ht(t, e, n, r = !1) {\n        return new $n({\n            tt: t,\n            methodName: e,\n            at: n,\n            path: tt.emptyPath(),\n            rt: !1,\n            ct: r\n        }, this.databaseId, this.q, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Fn(t) {\n    const e = t._freezeSettings(), n = Ze(t._databaseId);\n    return new xn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Sn(t, e, n, r, s, i = {}) {\n    const o = t.ht(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Kn(\"Data must be an object, but it was:\", o, r);\n    const u = Gn(r, o);\n    let c, a;\n    if (i.merge) c = new Vt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = Qn(e, r, n);\n            if (!o.contains(s)) throw new L(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            Xn(t, s) || t.push(s);\n        }\n        c = new Vt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Vn(new Yt(u), c, a);\n}\n\nclass qn extends An {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.tt) throw 1 /* Update */ === t.tt ? t.ut(`${this._methodName}() can only appear at the top level of your update data`) : t.ut(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof qn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function On(t, e, n) {\n    return new $n({\n        tt: 3 /* Argument */ ,\n        at: e.settings.at,\n        methodName: t._methodName,\n        rt: n\n    }, e.databaseId, e.q, e.ignoreUndefinedProperties);\n}\n\nclass kn extends An {\n    _toFieldTransform(t) {\n        return new Ae(t.path, new be);\n    }\n    isEqual(t) {\n        return t instanceof kn;\n    }\n}\n\nclass Cn extends An {\n    constructor(t, e) {\n        super(t), this.lt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.lt.map((t => zn(t, e))), r = new Ee(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Ln extends An {\n    constructor(t, e) {\n        super(t), this.lt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.lt.map((t => zn(t, e))), r = new Te(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Mn extends An {\n    constructor(t, e) {\n        super(t), this.ft = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ie(t.q, ge(t.q, this.ft));\n        return new Ae(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Un(t, e, n, r) {\n    const s = t.ht(1 /* Update */ , e, n);\n    Kn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Yt.empty();\n    Et(r, ((t, r) => {\n        const u = Hn(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = h(r);\n        const c = s.it(u);\n        if (r instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = zn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Vt(i);\n    return new Nn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function jn(t, e, n, r, s, i) {\n    const o = t.ht(1 /* Update */ , e, n), u = [ Qn(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new L(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(Qn(e, i[t])), c.push(i[t + 1]);\n    const a = [], l = Yt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!Xn(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = h(n);\n        const r = o.it(e);\n        if (n instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = zn(n, r);\n            null != t && (a.push(e), l.set(e, t));\n        }\n    }\n    const f = new Vt(a);\n    return new Nn(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Bn(t, e, n, r = !1) {\n    return zn(n, t.ht(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function zn(t, e) {\n    if (Wn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = h(t))) return Kn(\"Unsupported field value:\", e, t), Gn(t, e);\n    if (t instanceof An) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Dn(e.tt)) throw e.ut(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ut(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.rt && 4 /* ArrayArgument */ !== e.tt) throw e.ut(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = zn(s, e.ot(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = h(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return ge(e.q, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = gt.fromDate(t);\n            return {\n                timestampValue: qe(e.q, n)\n            };\n        }\n        if (t instanceof gt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: qe(e.q, n)\n            };\n        }\n        if (t instanceof Rn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof In) return {\n            bytesValue: Oe(e.q, t._byteString)\n        };\n        if (t instanceof wn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ut(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Le(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ut(`Unsupported field value: ${it(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Gn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Et(t, ((t, r) => {\n        const s = zn(r, e.nt(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Wn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Rn || t instanceof In || t instanceof wn || t instanceof An);\n}\n\nfunction Kn(t, e, n) {\n    if (!Wn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = it(n);\n        throw \"an object\" === r ? e.ut(t + \" a custom object\") : e.ut(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Qn(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = h(e)) instanceof En) return e._internalPath;\n    if (\"string\" == typeof e) return Hn(t, e);\n    throw Jn(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Yn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Hn(t, e, n) {\n    if (e.search(Yn) >= 0) throw Jn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new En(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw Jn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction Jn(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new L(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Xn(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Zn {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new wn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new tr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(rr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class tr extends Zn {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class er {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function nr(t, e) {\n    return t = h(t), e = h(e), t instanceof Zn && e instanceof Zn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof er && e instanceof er && (bn(t.query, e.query) && _t(t.docs, e.docs, nr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function rr(t, e) {\n    return \"string\" == typeof e ? Hn(t, e) : e instanceof En ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass sr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function ir(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass or extends sr {\n    constructor(t, e, n) {\n        super(), this.dt = t, this.wt = e, this.yt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Fn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new L(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    br(o, i);\n                    const e = [];\n                    for (const n of o) e.push(vr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = vr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || br(o, i), \n            u = Bn(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Zt.create(s, i, u);\n            return function(t, e) {\n                if (e.D()) {\n                    const n = we(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new L(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = de(t);\n                    null !== r && Er(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new L(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new L(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this.dt, this.wt, this.yt);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function ur(t, e, n) {\n    const r = e, s = rr(\"where\", t);\n    return new or(s, r, n);\n}\n\nclass cr extends sr {\n    constructor(t, e) {\n        super(), this.dt = t, this._t = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new L(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new L(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ae(e, n);\n            return function(t, e) {\n                if (null === de(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = we(t);\n                    null !== n && Er(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.dt, this._t);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function ar(t, e = \"asc\") {\n    const n = e, r = rr(\"orderBy\", t);\n    return new cr(r, n);\n}\n\nclass hr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.gt = e, this.vt = n;\n    }\n    _apply(t) {\n        return new mn(t.firestore, t.converter, function(t, e, n) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.gt, this.vt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function lr(t) {\n    return ut(\"limit\", t), new hr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function fr(t) {\n    return ut(\"limitToLast\", t), new hr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass dr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.Et = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.bt, this.Et);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction wr(...t) {\n    return new dr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction mr(...t) {\n    return new dr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass pr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.Et = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.bt, this.Et);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction yr(...t) {\n    return new pr(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction _r(...t) {\n    return new pr(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function gr(t, e, n, r) {\n    if (n[0] = h(n[0]), n[0] instanceof Zn) return function(t, e, n, r, s) {\n        if (!r) throw new L(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of pe(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (St(t)) throw new L(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new L(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new ce(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Fn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new L(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new L(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!me(t) && -1 !== c.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(X.fromString(c));\n                    if (!et.isDocumentKey(n)) throw new L(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new et(n);\n                    u.push(Bt(e, s));\n                } else {\n                    const t = Bn(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new ce(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction vr(t, e, n) {\n    if (\"string\" == typeof (n = h(n))) {\n        if (\"\" === n) throw new L(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!me(e) && -1 !== n.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(X.fromString(n));\n        if (!et.isDocumentKey(r)) throw new L(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Bt(t, new et(r));\n    }\n    if (n instanceof wn) return Bt(t, n._key);\n    throw new L(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function br(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new L(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new L(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Er(t, e, n) {\n    if (!n.isEqual(e)) throw new L(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Tr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Ir extends class {\n    convertValue(t, e = \"none\") {\n        switch (Ct(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return xt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Ft(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Rn(xt(t.latitude), xt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = qt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ot(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = X.fromString(t);\n        v(Xe(n));\n        const r = new H(n.get(1), n.get(3)), s = new et(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new In(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new wn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Ar(t) {\n    const e = un((t = ot(t, wn)).firestore), n = new Ir(t.firestore);\n    return rn(e, [ t._key ]).then((e => {\n        v(1 === e.length);\n        const r = e[0];\n        return new Zn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Rr(t) {\n    !function(t) {\n        if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ot(t, mn))._query);\n    const e = un(t.firestore), n = new Ir(t.firestore);\n    return sn(e, t._query).then((e => {\n        const r = e.map((e => new tr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new er(t, r);\n    }));\n}\n\nfunction Pr(t, e, n) {\n    const r = Tr((t = ot(t, wn)).converter, e, n), s = Sn(Fn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return nn(un(t.firestore), [ s.toMutation(t._key, Re.none()) ]);\n}\n\nfunction Vr(t, e, n, ...r) {\n    const s = Fn((t = ot(t, wn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(s, \"updateDoc\", t._key, e, n, r) : Un(s, \"updateDoc\", t._key, e);\n    return nn(un(t.firestore), [ i.toMutation(t._key, Re.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Nr(t) {\n    return nn(un((t = ot(t, wn)).firestore), [ new De(t._key, Re.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Dr(t, e) {\n    const n = gn(t = ot(t, pn)), r = Tr(t.converter, e), s = Sn(Fn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return nn(un(t.firestore), [ s.toMutation(n._key, Re.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function $r() {\n    return new qn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function xr() {\n    return new kn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Fr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Cn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Sr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Ln(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function qr(t) {\n    return new Mn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Or {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Fn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Re.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Un(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Re.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = kr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new De(e._key, Re.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new L(x, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction kr(t, e) {\n    if ((t = h(t)).firestore !== e) throw new L(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Cr(t) {\n    const e = un(t = ot(t, an));\n    return new Or(t, (t => nn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Lr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new L(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await rn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new De(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = et.fromPath(e);\n            this.mutations.push(new $e(n, this.precondition(n)));\n        })), await nn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            e = vt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new L(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? Re.updateTime(e) : Re.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(vt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new L(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Re.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Re.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mr = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Ur {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.Tt = n.maxAttempts, this.It = new tn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Tt -= 1, this.At();\n    }\n    At() {\n        this.It.W((async () => {\n            const t = new Lr(this.datastore), e = this.Rt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Pt(t);\n                }))));\n            })).catch((t => {\n                this.Pt(t);\n            }));\n        }));\n    }\n    Rt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Pt(t) {\n        this.Tt > 0 && this.Vt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget((() => (this.At(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Vt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return g();\n\n                  case T:\n                  case I:\n                  case R:\n                  case $:\n                  case O:\n                  case k:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case D:\n                    return !1;\n\n                  case A:\n                  case P:\n                  case V:\n                  case N:\n                  case x:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case S:\n                  case q:\n                  case C:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function jr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Br {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new M, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Br(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class zr {\n    constructor() {\n        // The last promise in the queue.\n        this.Nt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Dt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.$t = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.xt = [], \n        // visible for testing\n        this.Ft = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.St = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.qt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ot = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.It = new tn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.kt = () => {\n            const t = jr();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.It.Y();\n        };\n        const t = jr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.kt);\n    }\n    get isShuttingDown() {\n        return this.$t;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ct(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Lt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.$t) {\n            this.$t = !0, this.qt = t || !1;\n            const e = jr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.kt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ct(), this.$t) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new M;\n        return this.Lt((() => this.$t && this.qt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Dt.push(t), this.Mt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Mt() {\n        if (0 !== this.Dt.length) {\n            try {\n                await this.Dt[0](), this.Dt.shift(), this.It.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Dt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.It.W((() => this.Mt()));\n        }\n    }\n    Lt(t) {\n        const e = this.Nt.then((() => (this.St = !0, t().catch((t => {\n            this.Ft = t, this.St = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.St = !1, t))))));\n        return this.Nt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ct(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ot.indexOf(t) > -1 && (e = 0);\n        const r = Br.createAndSchedule(this, t, e, n, (t => this.Ut(t)));\n        return this.xt.push(r), r;\n    }\n    Ct() {\n        this.Ft && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async jt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Nt, await t;\n        } while (t !== this.Nt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Bt(t) {\n        for (const e of this.xt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    zt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.jt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.xt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.xt) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.jt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Gt(t) {\n        this.Ot.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    Ut(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.xt.indexOf(t);\n        this.xt.splice(e, 1);\n    }\n}\n\nclass Gr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Fn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = kr(t, this._firestore), n = new Ir(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Zn(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new Zn(this._firestore, n, e._key, null, e.converter);\n            throw g();\n        }));\n    }\n    set(t, e, n) {\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Un(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = kr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Wr(t, e, n) {\n    const r = un(t = ot(t, an)), s = Object.assign(Object.assign({}, Mr), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new L(A, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new M;\n    return new Ur(new zr, r, s, (n => e(new Gr(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {options: e}) => {\n    const n = t.getProvider(\"app\").getImmediate(), r = new an(n, new z(t.getProvider(\"auth-internal\")), new Q(t.getProvider(\"app-check-internal\")));\n    return e && r._setSettings(e), r;\n}), \"PUBLIC\")), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.4.13\", \"\"), r(\"firestore-lite\", \"3.4.13\", \"__BUILD_TARGET__\");\n\nexport { In as Bytes, pn as CollectionReference, wn as DocumentReference, Zn as DocumentSnapshot, En as FieldPath, An as FieldValue, an as Firestore, L as FirestoreError, Rn as GeoPoint, mn as Query, sr as QueryConstraint, tr as QueryDocumentSnapshot, er as QuerySnapshot, gt as Timestamp, Gr as Transaction, Or as WriteBatch, Dr as addDoc, Sr as arrayRemove, Fr as arrayUnion, yn as collection, _n as collectionGroup, fn as connectFirestoreEmulator, Nr as deleteDoc, $r as deleteField, gn as doc, Tn as documentId, _r as endAt, yr as endBefore, Ar as getDoc, Rr as getDocs, ln as getFirestore, qr as increment, hn as initializeFirestore, lr as limit, fr as limitToLast, ar as orderBy, ir as query, bn as queryEqual, vn as refEqual, Wr as runTransaction, xr as serverTimestamp, Pr as setDoc, w as setLogLevel, nr as snapshotEqual, mr as startAfter, wr as startAt, dn as terminate, Vr as updateDoc, ur as where, Cr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"]},"metadata":{},"sourceType":"module"}